// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Game2Super.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "Game2Super.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace MPMsg {
class StartMatchReq_Game2MatchDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<StartMatchReq_Game2Match>
     _instance;
} _StartMatchReq_Game2Match_default_instance_;
class StartMatchRet_Super2GameDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<StartMatchRet_Super2Game>
     _instance;
} _StartMatchRet_Super2Game_default_instance_;
class Game2GameTransferMsgDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Game2GameTransferMsg>
     _instance;
} _Game2GameTransferMsg_default_instance_;

namespace protobuf_Game2Super_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[3];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StartMatchReq_Game2Match, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StartMatchReq_Game2Match, plat_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StartMatchReq_Game2Match, server_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StartMatchReq_Game2Match, uid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StartMatchRet_Super2Game, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StartMatchRet_Super2Game, err_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StartMatchRet_Super2Game, plat_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StartMatchRet_Super2Game, server_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StartMatchRet_Super2Game, uid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Game2GameTransferMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Game2GameTransferMsg, platfrom_id_from_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Game2GameTransferMsg, server_type_from_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Game2GameTransferMsg, server_id_from_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Game2GameTransferMsg, platfrom_id_to_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Game2GameTransferMsg, server_type_to_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Game2GameTransferMsg, server_id_to_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Game2GameTransferMsg, msg_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Game2GameTransferMsg, data_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(StartMatchReq_Game2Match)},
  { 8, -1, sizeof(StartMatchRet_Super2Game)},
  { 17, -1, sizeof(Game2GameTransferMsg)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_StartMatchReq_Game2Match_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_StartMatchRet_Super2Game_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Game2GameTransferMsg_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "Game2Super.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _StartMatchReq_Game2Match_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_StartMatchReq_Game2Match_default_instance_);_StartMatchRet_Super2Game_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_StartMatchRet_Super2Game_default_instance_);_Game2GameTransferMsg_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Game2GameTransferMsg_default_instance_);}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\020Game2Super.proto\022\005MPMsg\"K\n\030StartMatchR"
      "eq_Game2Match\022\017\n\007plat_id\030\001 \001(\r\022\021\n\tserver"
      "_id\030\002 \001(\r\022\013\n\003uid\030\003 \003(\004\"]\n\030StartMatchRet_"
      "Super2Game\022\020\n\010err_code\030\001 \001(\r\022\017\n\007plat_id\030"
      "\002 \001(\r\022\021\n\tserver_id\030\003 \001(\r\022\013\n\003uid\030\004 \003(\004\"\306\001"
      "\n\024Game2GameTransferMsg\022\030\n\020platfrom_id_fr"
      "om\030\001 \001(\r\022\030\n\020server_type_from\030\002 \001(\r\022\026\n\016se"
      "rver_id_from\030\003 \001(\r\022\026\n\016platfrom_id_to\030\004 \001"
      "(\r\022\026\n\016server_type_to\030\005 \001(\r\022\024\n\014server_id_"
      "to\030\006 \001(\r\022\016\n\006msg_id\030\007 \001(\r\022\014\n\004data\030\010 \001(\014b\006"
      "proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 406);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Game2Super.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_Game2Super_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StartMatchReq_Game2Match::kPlatIdFieldNumber;
const int StartMatchReq_Game2Match::kServerIdFieldNumber;
const int StartMatchReq_Game2Match::kUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StartMatchReq_Game2Match::StartMatchReq_Game2Match()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Game2Super_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MPMsg.StartMatchReq_Game2Match)
}
StartMatchReq_Game2Match::StartMatchReq_Game2Match(const StartMatchReq_Game2Match& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      uid_(from.uid_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&plat_id_, &from.plat_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&server_id_) -
    reinterpret_cast<char*>(&plat_id_)) + sizeof(server_id_));
  // @@protoc_insertion_point(copy_constructor:MPMsg.StartMatchReq_Game2Match)
}

void StartMatchReq_Game2Match::SharedCtor() {
  ::memset(&plat_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&server_id_) -
      reinterpret_cast<char*>(&plat_id_)) + sizeof(server_id_));
  _cached_size_ = 0;
}

StartMatchReq_Game2Match::~StartMatchReq_Game2Match() {
  // @@protoc_insertion_point(destructor:MPMsg.StartMatchReq_Game2Match)
  SharedDtor();
}

void StartMatchReq_Game2Match::SharedDtor() {
}

void StartMatchReq_Game2Match::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StartMatchReq_Game2Match::descriptor() {
  protobuf_Game2Super_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Game2Super_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StartMatchReq_Game2Match& StartMatchReq_Game2Match::default_instance() {
  protobuf_Game2Super_2eproto::InitDefaults();
  return *internal_default_instance();
}

StartMatchReq_Game2Match* StartMatchReq_Game2Match::New(::google::protobuf::Arena* arena) const {
  StartMatchReq_Game2Match* n = new StartMatchReq_Game2Match;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StartMatchReq_Game2Match::Clear() {
// @@protoc_insertion_point(message_clear_start:MPMsg.StartMatchReq_Game2Match)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uid_.Clear();
  ::memset(&plat_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&server_id_) -
      reinterpret_cast<char*>(&plat_id_)) + sizeof(server_id_));
  _internal_metadata_.Clear();
}

bool StartMatchReq_Game2Match::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MPMsg.StartMatchReq_Game2Match)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 plat_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &plat_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 server_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &server_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 uid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_uid())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 26u, input, this->mutable_uid())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MPMsg.StartMatchReq_Game2Match)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MPMsg.StartMatchReq_Game2Match)
  return false;
#undef DO_
}

void StartMatchReq_Game2Match::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MPMsg.StartMatchReq_Game2Match)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 plat_id = 1;
  if (this->plat_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->plat_id(), output);
  }

  // uint32 server_id = 2;
  if (this->server_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->server_id(), output);
  }

  // repeated uint64 uid = 3;
  if (this->uid_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _uid_cached_byte_size_));
  }
  for (int i = 0, n = this->uid_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->uid(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:MPMsg.StartMatchReq_Game2Match)
}

::google::protobuf::uint8* StartMatchReq_Game2Match::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MPMsg.StartMatchReq_Game2Match)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 plat_id = 1;
  if (this->plat_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->plat_id(), target);
  }

  // uint32 server_id = 2;
  if (this->server_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->server_id(), target);
  }

  // repeated uint64 uid = 3;
  if (this->uid_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _uid_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->uid_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MPMsg.StartMatchReq_Game2Match)
  return target;
}

size_t StartMatchReq_Game2Match::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MPMsg.StartMatchReq_Game2Match)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint64 uid = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->uid_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _uid_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // uint32 plat_id = 1;
  if (this->plat_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->plat_id());
  }

  // uint32 server_id = 2;
  if (this->server_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->server_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StartMatchReq_Game2Match::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MPMsg.StartMatchReq_Game2Match)
  GOOGLE_DCHECK_NE(&from, this);
  const StartMatchReq_Game2Match* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StartMatchReq_Game2Match>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MPMsg.StartMatchReq_Game2Match)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MPMsg.StartMatchReq_Game2Match)
    MergeFrom(*source);
  }
}

void StartMatchReq_Game2Match::MergeFrom(const StartMatchReq_Game2Match& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MPMsg.StartMatchReq_Game2Match)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  uid_.MergeFrom(from.uid_);
  if (from.plat_id() != 0) {
    set_plat_id(from.plat_id());
  }
  if (from.server_id() != 0) {
    set_server_id(from.server_id());
  }
}

void StartMatchReq_Game2Match::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MPMsg.StartMatchReq_Game2Match)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StartMatchReq_Game2Match::CopyFrom(const StartMatchReq_Game2Match& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MPMsg.StartMatchReq_Game2Match)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StartMatchReq_Game2Match::IsInitialized() const {
  return true;
}

void StartMatchReq_Game2Match::Swap(StartMatchReq_Game2Match* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StartMatchReq_Game2Match::InternalSwap(StartMatchReq_Game2Match* other) {
  using std::swap;
  uid_.InternalSwap(&other->uid_);
  swap(plat_id_, other->plat_id_);
  swap(server_id_, other->server_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StartMatchReq_Game2Match::GetMetadata() const {
  protobuf_Game2Super_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Game2Super_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StartMatchReq_Game2Match

// uint32 plat_id = 1;
void StartMatchReq_Game2Match::clear_plat_id() {
  plat_id_ = 0u;
}
::google::protobuf::uint32 StartMatchReq_Game2Match::plat_id() const {
  // @@protoc_insertion_point(field_get:MPMsg.StartMatchReq_Game2Match.plat_id)
  return plat_id_;
}
void StartMatchReq_Game2Match::set_plat_id(::google::protobuf::uint32 value) {
  
  plat_id_ = value;
  // @@protoc_insertion_point(field_set:MPMsg.StartMatchReq_Game2Match.plat_id)
}

// uint32 server_id = 2;
void StartMatchReq_Game2Match::clear_server_id() {
  server_id_ = 0u;
}
::google::protobuf::uint32 StartMatchReq_Game2Match::server_id() const {
  // @@protoc_insertion_point(field_get:MPMsg.StartMatchReq_Game2Match.server_id)
  return server_id_;
}
void StartMatchReq_Game2Match::set_server_id(::google::protobuf::uint32 value) {
  
  server_id_ = value;
  // @@protoc_insertion_point(field_set:MPMsg.StartMatchReq_Game2Match.server_id)
}

// repeated uint64 uid = 3;
int StartMatchReq_Game2Match::uid_size() const {
  return uid_.size();
}
void StartMatchReq_Game2Match::clear_uid() {
  uid_.Clear();
}
::google::protobuf::uint64 StartMatchReq_Game2Match::uid(int index) const {
  // @@protoc_insertion_point(field_get:MPMsg.StartMatchReq_Game2Match.uid)
  return uid_.Get(index);
}
void StartMatchReq_Game2Match::set_uid(int index, ::google::protobuf::uint64 value) {
  uid_.Set(index, value);
  // @@protoc_insertion_point(field_set:MPMsg.StartMatchReq_Game2Match.uid)
}
void StartMatchReq_Game2Match::add_uid(::google::protobuf::uint64 value) {
  uid_.Add(value);
  // @@protoc_insertion_point(field_add:MPMsg.StartMatchReq_Game2Match.uid)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
StartMatchReq_Game2Match::uid() const {
  // @@protoc_insertion_point(field_list:MPMsg.StartMatchReq_Game2Match.uid)
  return uid_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
StartMatchReq_Game2Match::mutable_uid() {
  // @@protoc_insertion_point(field_mutable_list:MPMsg.StartMatchReq_Game2Match.uid)
  return &uid_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StartMatchRet_Super2Game::kErrCodeFieldNumber;
const int StartMatchRet_Super2Game::kPlatIdFieldNumber;
const int StartMatchRet_Super2Game::kServerIdFieldNumber;
const int StartMatchRet_Super2Game::kUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StartMatchRet_Super2Game::StartMatchRet_Super2Game()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Game2Super_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MPMsg.StartMatchRet_Super2Game)
}
StartMatchRet_Super2Game::StartMatchRet_Super2Game(const StartMatchRet_Super2Game& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      uid_(from.uid_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&err_code_, &from.err_code_,
    static_cast<size_t>(reinterpret_cast<char*>(&server_id_) -
    reinterpret_cast<char*>(&err_code_)) + sizeof(server_id_));
  // @@protoc_insertion_point(copy_constructor:MPMsg.StartMatchRet_Super2Game)
}

void StartMatchRet_Super2Game::SharedCtor() {
  ::memset(&err_code_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&server_id_) -
      reinterpret_cast<char*>(&err_code_)) + sizeof(server_id_));
  _cached_size_ = 0;
}

StartMatchRet_Super2Game::~StartMatchRet_Super2Game() {
  // @@protoc_insertion_point(destructor:MPMsg.StartMatchRet_Super2Game)
  SharedDtor();
}

void StartMatchRet_Super2Game::SharedDtor() {
}

void StartMatchRet_Super2Game::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StartMatchRet_Super2Game::descriptor() {
  protobuf_Game2Super_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Game2Super_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StartMatchRet_Super2Game& StartMatchRet_Super2Game::default_instance() {
  protobuf_Game2Super_2eproto::InitDefaults();
  return *internal_default_instance();
}

StartMatchRet_Super2Game* StartMatchRet_Super2Game::New(::google::protobuf::Arena* arena) const {
  StartMatchRet_Super2Game* n = new StartMatchRet_Super2Game;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StartMatchRet_Super2Game::Clear() {
// @@protoc_insertion_point(message_clear_start:MPMsg.StartMatchRet_Super2Game)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uid_.Clear();
  ::memset(&err_code_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&server_id_) -
      reinterpret_cast<char*>(&err_code_)) + sizeof(server_id_));
  _internal_metadata_.Clear();
}

bool StartMatchRet_Super2Game::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MPMsg.StartMatchRet_Super2Game)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 err_code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &err_code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 plat_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &plat_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 server_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &server_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 uid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_uid())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 34u, input, this->mutable_uid())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MPMsg.StartMatchRet_Super2Game)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MPMsg.StartMatchRet_Super2Game)
  return false;
#undef DO_
}

void StartMatchRet_Super2Game::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MPMsg.StartMatchRet_Super2Game)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 err_code = 1;
  if (this->err_code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->err_code(), output);
  }

  // uint32 plat_id = 2;
  if (this->plat_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->plat_id(), output);
  }

  // uint32 server_id = 3;
  if (this->server_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->server_id(), output);
  }

  // repeated uint64 uid = 4;
  if (this->uid_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _uid_cached_byte_size_));
  }
  for (int i = 0, n = this->uid_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->uid(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:MPMsg.StartMatchRet_Super2Game)
}

::google::protobuf::uint8* StartMatchRet_Super2Game::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MPMsg.StartMatchRet_Super2Game)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 err_code = 1;
  if (this->err_code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->err_code(), target);
  }

  // uint32 plat_id = 2;
  if (this->plat_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->plat_id(), target);
  }

  // uint32 server_id = 3;
  if (this->server_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->server_id(), target);
  }

  // repeated uint64 uid = 4;
  if (this->uid_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _uid_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->uid_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MPMsg.StartMatchRet_Super2Game)
  return target;
}

size_t StartMatchRet_Super2Game::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MPMsg.StartMatchRet_Super2Game)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint64 uid = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->uid_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _uid_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // uint32 err_code = 1;
  if (this->err_code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->err_code());
  }

  // uint32 plat_id = 2;
  if (this->plat_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->plat_id());
  }

  // uint32 server_id = 3;
  if (this->server_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->server_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StartMatchRet_Super2Game::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MPMsg.StartMatchRet_Super2Game)
  GOOGLE_DCHECK_NE(&from, this);
  const StartMatchRet_Super2Game* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StartMatchRet_Super2Game>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MPMsg.StartMatchRet_Super2Game)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MPMsg.StartMatchRet_Super2Game)
    MergeFrom(*source);
  }
}

void StartMatchRet_Super2Game::MergeFrom(const StartMatchRet_Super2Game& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MPMsg.StartMatchRet_Super2Game)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  uid_.MergeFrom(from.uid_);
  if (from.err_code() != 0) {
    set_err_code(from.err_code());
  }
  if (from.plat_id() != 0) {
    set_plat_id(from.plat_id());
  }
  if (from.server_id() != 0) {
    set_server_id(from.server_id());
  }
}

void StartMatchRet_Super2Game::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MPMsg.StartMatchRet_Super2Game)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StartMatchRet_Super2Game::CopyFrom(const StartMatchRet_Super2Game& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MPMsg.StartMatchRet_Super2Game)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StartMatchRet_Super2Game::IsInitialized() const {
  return true;
}

void StartMatchRet_Super2Game::Swap(StartMatchRet_Super2Game* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StartMatchRet_Super2Game::InternalSwap(StartMatchRet_Super2Game* other) {
  using std::swap;
  uid_.InternalSwap(&other->uid_);
  swap(err_code_, other->err_code_);
  swap(plat_id_, other->plat_id_);
  swap(server_id_, other->server_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StartMatchRet_Super2Game::GetMetadata() const {
  protobuf_Game2Super_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Game2Super_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StartMatchRet_Super2Game

// uint32 err_code = 1;
void StartMatchRet_Super2Game::clear_err_code() {
  err_code_ = 0u;
}
::google::protobuf::uint32 StartMatchRet_Super2Game::err_code() const {
  // @@protoc_insertion_point(field_get:MPMsg.StartMatchRet_Super2Game.err_code)
  return err_code_;
}
void StartMatchRet_Super2Game::set_err_code(::google::protobuf::uint32 value) {
  
  err_code_ = value;
  // @@protoc_insertion_point(field_set:MPMsg.StartMatchRet_Super2Game.err_code)
}

// uint32 plat_id = 2;
void StartMatchRet_Super2Game::clear_plat_id() {
  plat_id_ = 0u;
}
::google::protobuf::uint32 StartMatchRet_Super2Game::plat_id() const {
  // @@protoc_insertion_point(field_get:MPMsg.StartMatchRet_Super2Game.plat_id)
  return plat_id_;
}
void StartMatchRet_Super2Game::set_plat_id(::google::protobuf::uint32 value) {
  
  plat_id_ = value;
  // @@protoc_insertion_point(field_set:MPMsg.StartMatchRet_Super2Game.plat_id)
}

// uint32 server_id = 3;
void StartMatchRet_Super2Game::clear_server_id() {
  server_id_ = 0u;
}
::google::protobuf::uint32 StartMatchRet_Super2Game::server_id() const {
  // @@protoc_insertion_point(field_get:MPMsg.StartMatchRet_Super2Game.server_id)
  return server_id_;
}
void StartMatchRet_Super2Game::set_server_id(::google::protobuf::uint32 value) {
  
  server_id_ = value;
  // @@protoc_insertion_point(field_set:MPMsg.StartMatchRet_Super2Game.server_id)
}

// repeated uint64 uid = 4;
int StartMatchRet_Super2Game::uid_size() const {
  return uid_.size();
}
void StartMatchRet_Super2Game::clear_uid() {
  uid_.Clear();
}
::google::protobuf::uint64 StartMatchRet_Super2Game::uid(int index) const {
  // @@protoc_insertion_point(field_get:MPMsg.StartMatchRet_Super2Game.uid)
  return uid_.Get(index);
}
void StartMatchRet_Super2Game::set_uid(int index, ::google::protobuf::uint64 value) {
  uid_.Set(index, value);
  // @@protoc_insertion_point(field_set:MPMsg.StartMatchRet_Super2Game.uid)
}
void StartMatchRet_Super2Game::add_uid(::google::protobuf::uint64 value) {
  uid_.Add(value);
  // @@protoc_insertion_point(field_add:MPMsg.StartMatchRet_Super2Game.uid)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
StartMatchRet_Super2Game::uid() const {
  // @@protoc_insertion_point(field_list:MPMsg.StartMatchRet_Super2Game.uid)
  return uid_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
StartMatchRet_Super2Game::mutable_uid() {
  // @@protoc_insertion_point(field_mutable_list:MPMsg.StartMatchRet_Super2Game.uid)
  return &uid_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Game2GameTransferMsg::kPlatfromIdFromFieldNumber;
const int Game2GameTransferMsg::kServerTypeFromFieldNumber;
const int Game2GameTransferMsg::kServerIdFromFieldNumber;
const int Game2GameTransferMsg::kPlatfromIdToFieldNumber;
const int Game2GameTransferMsg::kServerTypeToFieldNumber;
const int Game2GameTransferMsg::kServerIdToFieldNumber;
const int Game2GameTransferMsg::kMsgIdFieldNumber;
const int Game2GameTransferMsg::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Game2GameTransferMsg::Game2GameTransferMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Game2Super_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MPMsg.Game2GameTransferMsg)
}
Game2GameTransferMsg::Game2GameTransferMsg(const Game2GameTransferMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  ::memcpy(&platfrom_id_from_, &from.platfrom_id_from_,
    static_cast<size_t>(reinterpret_cast<char*>(&msg_id_) -
    reinterpret_cast<char*>(&platfrom_id_from_)) + sizeof(msg_id_));
  // @@protoc_insertion_point(copy_constructor:MPMsg.Game2GameTransferMsg)
}

void Game2GameTransferMsg::SharedCtor() {
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&platfrom_id_from_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&msg_id_) -
      reinterpret_cast<char*>(&platfrom_id_from_)) + sizeof(msg_id_));
  _cached_size_ = 0;
}

Game2GameTransferMsg::~Game2GameTransferMsg() {
  // @@protoc_insertion_point(destructor:MPMsg.Game2GameTransferMsg)
  SharedDtor();
}

void Game2GameTransferMsg::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Game2GameTransferMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Game2GameTransferMsg::descriptor() {
  protobuf_Game2Super_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Game2Super_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Game2GameTransferMsg& Game2GameTransferMsg::default_instance() {
  protobuf_Game2Super_2eproto::InitDefaults();
  return *internal_default_instance();
}

Game2GameTransferMsg* Game2GameTransferMsg::New(::google::protobuf::Arena* arena) const {
  Game2GameTransferMsg* n = new Game2GameTransferMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Game2GameTransferMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:MPMsg.Game2GameTransferMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&platfrom_id_from_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&msg_id_) -
      reinterpret_cast<char*>(&platfrom_id_from_)) + sizeof(msg_id_));
  _internal_metadata_.Clear();
}

bool Game2GameTransferMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MPMsg.Game2GameTransferMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 platfrom_id_from = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &platfrom_id_from_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 server_type_from = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &server_type_from_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 server_id_from = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &server_id_from_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 platfrom_id_to = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &platfrom_id_to_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 server_type_to = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &server_type_to_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 server_id_to = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &server_id_to_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 msg_id = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msg_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes data = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MPMsg.Game2GameTransferMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MPMsg.Game2GameTransferMsg)
  return false;
#undef DO_
}

void Game2GameTransferMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MPMsg.Game2GameTransferMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 platfrom_id_from = 1;
  if (this->platfrom_id_from() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->platfrom_id_from(), output);
  }

  // uint32 server_type_from = 2;
  if (this->server_type_from() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->server_type_from(), output);
  }

  // uint32 server_id_from = 3;
  if (this->server_id_from() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->server_id_from(), output);
  }

  // uint32 platfrom_id_to = 4;
  if (this->platfrom_id_to() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->platfrom_id_to(), output);
  }

  // uint32 server_type_to = 5;
  if (this->server_type_to() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->server_type_to(), output);
  }

  // uint32 server_id_to = 6;
  if (this->server_id_to() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->server_id_to(), output);
  }

  // uint32 msg_id = 7;
  if (this->msg_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->msg_id(), output);
  }

  // bytes data = 8;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      8, this->data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:MPMsg.Game2GameTransferMsg)
}

::google::protobuf::uint8* Game2GameTransferMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MPMsg.Game2GameTransferMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 platfrom_id_from = 1;
  if (this->platfrom_id_from() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->platfrom_id_from(), target);
  }

  // uint32 server_type_from = 2;
  if (this->server_type_from() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->server_type_from(), target);
  }

  // uint32 server_id_from = 3;
  if (this->server_id_from() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->server_id_from(), target);
  }

  // uint32 platfrom_id_to = 4;
  if (this->platfrom_id_to() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->platfrom_id_to(), target);
  }

  // uint32 server_type_to = 5;
  if (this->server_type_to() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->server_type_to(), target);
  }

  // uint32 server_id_to = 6;
  if (this->server_id_to() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->server_id_to(), target);
  }

  // uint32 msg_id = 7;
  if (this->msg_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->msg_id(), target);
  }

  // bytes data = 8;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        8, this->data(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MPMsg.Game2GameTransferMsg)
  return target;
}

size_t Game2GameTransferMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MPMsg.Game2GameTransferMsg)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes data = 8;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  // uint32 platfrom_id_from = 1;
  if (this->platfrom_id_from() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->platfrom_id_from());
  }

  // uint32 server_type_from = 2;
  if (this->server_type_from() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->server_type_from());
  }

  // uint32 server_id_from = 3;
  if (this->server_id_from() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->server_id_from());
  }

  // uint32 platfrom_id_to = 4;
  if (this->platfrom_id_to() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->platfrom_id_to());
  }

  // uint32 server_type_to = 5;
  if (this->server_type_to() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->server_type_to());
  }

  // uint32 server_id_to = 6;
  if (this->server_id_to() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->server_id_to());
  }

  // uint32 msg_id = 7;
  if (this->msg_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->msg_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Game2GameTransferMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MPMsg.Game2GameTransferMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const Game2GameTransferMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Game2GameTransferMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MPMsg.Game2GameTransferMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MPMsg.Game2GameTransferMsg)
    MergeFrom(*source);
  }
}

void Game2GameTransferMsg::MergeFrom(const Game2GameTransferMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MPMsg.Game2GameTransferMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  if (from.platfrom_id_from() != 0) {
    set_platfrom_id_from(from.platfrom_id_from());
  }
  if (from.server_type_from() != 0) {
    set_server_type_from(from.server_type_from());
  }
  if (from.server_id_from() != 0) {
    set_server_id_from(from.server_id_from());
  }
  if (from.platfrom_id_to() != 0) {
    set_platfrom_id_to(from.platfrom_id_to());
  }
  if (from.server_type_to() != 0) {
    set_server_type_to(from.server_type_to());
  }
  if (from.server_id_to() != 0) {
    set_server_id_to(from.server_id_to());
  }
  if (from.msg_id() != 0) {
    set_msg_id(from.msg_id());
  }
}

void Game2GameTransferMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MPMsg.Game2GameTransferMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Game2GameTransferMsg::CopyFrom(const Game2GameTransferMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MPMsg.Game2GameTransferMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Game2GameTransferMsg::IsInitialized() const {
  return true;
}

void Game2GameTransferMsg::Swap(Game2GameTransferMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Game2GameTransferMsg::InternalSwap(Game2GameTransferMsg* other) {
  using std::swap;
  data_.Swap(&other->data_);
  swap(platfrom_id_from_, other->platfrom_id_from_);
  swap(server_type_from_, other->server_type_from_);
  swap(server_id_from_, other->server_id_from_);
  swap(platfrom_id_to_, other->platfrom_id_to_);
  swap(server_type_to_, other->server_type_to_);
  swap(server_id_to_, other->server_id_to_);
  swap(msg_id_, other->msg_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Game2GameTransferMsg::GetMetadata() const {
  protobuf_Game2Super_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Game2Super_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Game2GameTransferMsg

// uint32 platfrom_id_from = 1;
void Game2GameTransferMsg::clear_platfrom_id_from() {
  platfrom_id_from_ = 0u;
}
::google::protobuf::uint32 Game2GameTransferMsg::platfrom_id_from() const {
  // @@protoc_insertion_point(field_get:MPMsg.Game2GameTransferMsg.platfrom_id_from)
  return platfrom_id_from_;
}
void Game2GameTransferMsg::set_platfrom_id_from(::google::protobuf::uint32 value) {
  
  platfrom_id_from_ = value;
  // @@protoc_insertion_point(field_set:MPMsg.Game2GameTransferMsg.platfrom_id_from)
}

// uint32 server_type_from = 2;
void Game2GameTransferMsg::clear_server_type_from() {
  server_type_from_ = 0u;
}
::google::protobuf::uint32 Game2GameTransferMsg::server_type_from() const {
  // @@protoc_insertion_point(field_get:MPMsg.Game2GameTransferMsg.server_type_from)
  return server_type_from_;
}
void Game2GameTransferMsg::set_server_type_from(::google::protobuf::uint32 value) {
  
  server_type_from_ = value;
  // @@protoc_insertion_point(field_set:MPMsg.Game2GameTransferMsg.server_type_from)
}

// uint32 server_id_from = 3;
void Game2GameTransferMsg::clear_server_id_from() {
  server_id_from_ = 0u;
}
::google::protobuf::uint32 Game2GameTransferMsg::server_id_from() const {
  // @@protoc_insertion_point(field_get:MPMsg.Game2GameTransferMsg.server_id_from)
  return server_id_from_;
}
void Game2GameTransferMsg::set_server_id_from(::google::protobuf::uint32 value) {
  
  server_id_from_ = value;
  // @@protoc_insertion_point(field_set:MPMsg.Game2GameTransferMsg.server_id_from)
}

// uint32 platfrom_id_to = 4;
void Game2GameTransferMsg::clear_platfrom_id_to() {
  platfrom_id_to_ = 0u;
}
::google::protobuf::uint32 Game2GameTransferMsg::platfrom_id_to() const {
  // @@protoc_insertion_point(field_get:MPMsg.Game2GameTransferMsg.platfrom_id_to)
  return platfrom_id_to_;
}
void Game2GameTransferMsg::set_platfrom_id_to(::google::protobuf::uint32 value) {
  
  platfrom_id_to_ = value;
  // @@protoc_insertion_point(field_set:MPMsg.Game2GameTransferMsg.platfrom_id_to)
}

// uint32 server_type_to = 5;
void Game2GameTransferMsg::clear_server_type_to() {
  server_type_to_ = 0u;
}
::google::protobuf::uint32 Game2GameTransferMsg::server_type_to() const {
  // @@protoc_insertion_point(field_get:MPMsg.Game2GameTransferMsg.server_type_to)
  return server_type_to_;
}
void Game2GameTransferMsg::set_server_type_to(::google::protobuf::uint32 value) {
  
  server_type_to_ = value;
  // @@protoc_insertion_point(field_set:MPMsg.Game2GameTransferMsg.server_type_to)
}

// uint32 server_id_to = 6;
void Game2GameTransferMsg::clear_server_id_to() {
  server_id_to_ = 0u;
}
::google::protobuf::uint32 Game2GameTransferMsg::server_id_to() const {
  // @@protoc_insertion_point(field_get:MPMsg.Game2GameTransferMsg.server_id_to)
  return server_id_to_;
}
void Game2GameTransferMsg::set_server_id_to(::google::protobuf::uint32 value) {
  
  server_id_to_ = value;
  // @@protoc_insertion_point(field_set:MPMsg.Game2GameTransferMsg.server_id_to)
}

// uint32 msg_id = 7;
void Game2GameTransferMsg::clear_msg_id() {
  msg_id_ = 0u;
}
::google::protobuf::uint32 Game2GameTransferMsg::msg_id() const {
  // @@protoc_insertion_point(field_get:MPMsg.Game2GameTransferMsg.msg_id)
  return msg_id_;
}
void Game2GameTransferMsg::set_msg_id(::google::protobuf::uint32 value) {
  
  msg_id_ = value;
  // @@protoc_insertion_point(field_set:MPMsg.Game2GameTransferMsg.msg_id)
}

// bytes data = 8;
void Game2GameTransferMsg::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Game2GameTransferMsg::data() const {
  // @@protoc_insertion_point(field_get:MPMsg.Game2GameTransferMsg.data)
  return data_.GetNoArena();
}
void Game2GameTransferMsg::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MPMsg.Game2GameTransferMsg.data)
}
#if LANG_CXX11
void Game2GameTransferMsg::set_data(::std::string&& value) {
  
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MPMsg.Game2GameTransferMsg.data)
}
#endif
void Game2GameTransferMsg::set_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MPMsg.Game2GameTransferMsg.data)
}
void Game2GameTransferMsg::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MPMsg.Game2GameTransferMsg.data)
}
::std::string* Game2GameTransferMsg::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:MPMsg.Game2GameTransferMsg.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Game2GameTransferMsg::release_data() {
  // @@protoc_insertion_point(field_release:MPMsg.Game2GameTransferMsg.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Game2GameTransferMsg::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:MPMsg.Game2GameTransferMsg.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace MPMsg

// @@protoc_insertion_point(global_scope)
