// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MPMsgBase.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "MPMsgBase.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace MPMsg {
class IdentDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Ident>
     _instance;
} _Ident_default_instance_;
class MsgBaseDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MsgBase>
     _instance;
} _MsgBase_default_instance_;

namespace protobuf_MPMsgBase_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[2];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Ident, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Ident, high_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Ident, low_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBase, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBase, msg_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBase, msg_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgBase, msg_data_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(Ident)},
  { 7, -1, sizeof(MsgBase)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_Ident_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MsgBase_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "MPMsgBase.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::MPMsg::protobuf_MPDefine_2eproto::InitDefaults();
  _Ident_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Ident_default_instance_);_MsgBase_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MsgBase_default_instance_);}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\017MPMsgBase.proto\022\005MPMsg\032\016MPDefine.proto"
      "\"\"\n\005Ident\022\014\n\004high\030\001 \001(\003\022\013\n\003low\030\002 \001(\003\"M\n\007"
      "MsgBase\022 \n\010msg_type\030\001 \001(\0162\016.MPMsg.MsgTyp"
      "e\022\016\n\006msg_id\030\002 \001(\r\022\020\n\010msg_data\030\003 \001(\014b\006pro"
      "to3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 163);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "MPMsgBase.proto", &protobuf_RegisterTypes);
  ::MPMsg::protobuf_MPDefine_2eproto::AddDescriptors();
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_MPMsgBase_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Ident::kHighFieldNumber;
const int Ident::kLowFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Ident::Ident()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_MPMsgBase_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MPMsg.Ident)
}
Ident::Ident(const Ident& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&high_, &from.high_,
    static_cast<size_t>(reinterpret_cast<char*>(&low_) -
    reinterpret_cast<char*>(&high_)) + sizeof(low_));
  // @@protoc_insertion_point(copy_constructor:MPMsg.Ident)
}

void Ident::SharedCtor() {
  ::memset(&high_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&low_) -
      reinterpret_cast<char*>(&high_)) + sizeof(low_));
  _cached_size_ = 0;
}

Ident::~Ident() {
  // @@protoc_insertion_point(destructor:MPMsg.Ident)
  SharedDtor();
}

void Ident::SharedDtor() {
}

void Ident::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Ident::descriptor() {
  protobuf_MPMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_MPMsgBase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Ident& Ident::default_instance() {
  protobuf_MPMsgBase_2eproto::InitDefaults();
  return *internal_default_instance();
}

Ident* Ident::New(::google::protobuf::Arena* arena) const {
  Ident* n = new Ident;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Ident::Clear() {
// @@protoc_insertion_point(message_clear_start:MPMsg.Ident)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&high_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&low_) -
      reinterpret_cast<char*>(&high_)) + sizeof(low_));
  _internal_metadata_.Clear();
}

bool Ident::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MPMsg.Ident)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 high = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &high_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 low = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &low_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MPMsg.Ident)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MPMsg.Ident)
  return false;
#undef DO_
}

void Ident::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MPMsg.Ident)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 high = 1;
  if (this->high() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->high(), output);
  }

  // int64 low = 2;
  if (this->low() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->low(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:MPMsg.Ident)
}

::google::protobuf::uint8* Ident::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MPMsg.Ident)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 high = 1;
  if (this->high() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->high(), target);
  }

  // int64 low = 2;
  if (this->low() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->low(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MPMsg.Ident)
  return target;
}

size_t Ident::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MPMsg.Ident)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 high = 1;
  if (this->high() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->high());
  }

  // int64 low = 2;
  if (this->low() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->low());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Ident::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MPMsg.Ident)
  GOOGLE_DCHECK_NE(&from, this);
  const Ident* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Ident>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MPMsg.Ident)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MPMsg.Ident)
    MergeFrom(*source);
  }
}

void Ident::MergeFrom(const Ident& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MPMsg.Ident)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.high() != 0) {
    set_high(from.high());
  }
  if (from.low() != 0) {
    set_low(from.low());
  }
}

void Ident::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MPMsg.Ident)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Ident::CopyFrom(const Ident& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MPMsg.Ident)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Ident::IsInitialized() const {
  return true;
}

void Ident::Swap(Ident* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Ident::InternalSwap(Ident* other) {
  using std::swap;
  swap(high_, other->high_);
  swap(low_, other->low_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Ident::GetMetadata() const {
  protobuf_MPMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_MPMsgBase_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Ident

// int64 high = 1;
void Ident::clear_high() {
  high_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 Ident::high() const {
  // @@protoc_insertion_point(field_get:MPMsg.Ident.high)
  return high_;
}
void Ident::set_high(::google::protobuf::int64 value) {
  
  high_ = value;
  // @@protoc_insertion_point(field_set:MPMsg.Ident.high)
}

// int64 low = 2;
void Ident::clear_low() {
  low_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 Ident::low() const {
  // @@protoc_insertion_point(field_get:MPMsg.Ident.low)
  return low_;
}
void Ident::set_low(::google::protobuf::int64 value) {
  
  low_ = value;
  // @@protoc_insertion_point(field_set:MPMsg.Ident.low)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgBase::kMsgTypeFieldNumber;
const int MsgBase::kMsgIdFieldNumber;
const int MsgBase::kMsgDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgBase::MsgBase()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_MPMsgBase_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MPMsg.MsgBase)
}
MsgBase::MsgBase(const MsgBase& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg_data().size() > 0) {
    msg_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_data_);
  }
  ::memcpy(&msg_type_, &from.msg_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&msg_id_) -
    reinterpret_cast<char*>(&msg_type_)) + sizeof(msg_id_));
  // @@protoc_insertion_point(copy_constructor:MPMsg.MsgBase)
}

void MsgBase::SharedCtor() {
  msg_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msg_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&msg_id_) -
      reinterpret_cast<char*>(&msg_type_)) + sizeof(msg_id_));
  _cached_size_ = 0;
}

MsgBase::~MsgBase() {
  // @@protoc_insertion_point(destructor:MPMsg.MsgBase)
  SharedDtor();
}

void MsgBase::SharedDtor() {
  msg_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MsgBase::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgBase::descriptor() {
  protobuf_MPMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_MPMsgBase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MsgBase& MsgBase::default_instance() {
  protobuf_MPMsgBase_2eproto::InitDefaults();
  return *internal_default_instance();
}

MsgBase* MsgBase::New(::google::protobuf::Arena* arena) const {
  MsgBase* n = new MsgBase;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgBase::Clear() {
// @@protoc_insertion_point(message_clear_start:MPMsg.MsgBase)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msg_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&msg_id_) -
      reinterpret_cast<char*>(&msg_type_)) + sizeof(msg_id_));
  _internal_metadata_.Clear();
}

bool MsgBase::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MPMsg.MsgBase)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .MPMsg.MsgType msg_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_msg_type(static_cast< ::MPMsg::MsgType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 msg_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msg_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes msg_data = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_msg_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MPMsg.MsgBase)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MPMsg.MsgBase)
  return false;
#undef DO_
}

void MsgBase::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MPMsg.MsgBase)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .MPMsg.MsgType msg_type = 1;
  if (this->msg_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msg_type(), output);
  }

  // uint32 msg_id = 2;
  if (this->msg_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->msg_id(), output);
  }

  // bytes msg_data = 3;
  if (this->msg_data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->msg_data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:MPMsg.MsgBase)
}

::google::protobuf::uint8* MsgBase::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MPMsg.MsgBase)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .MPMsg.MsgType msg_type = 1;
  if (this->msg_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msg_type(), target);
  }

  // uint32 msg_id = 2;
  if (this->msg_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->msg_id(), target);
  }

  // bytes msg_data = 3;
  if (this->msg_data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->msg_data(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MPMsg.MsgBase)
  return target;
}

size_t MsgBase::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MPMsg.MsgBase)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes msg_data = 3;
  if (this->msg_data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->msg_data());
  }

  // .MPMsg.MsgType msg_type = 1;
  if (this->msg_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->msg_type());
  }

  // uint32 msg_id = 2;
  if (this->msg_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->msg_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgBase::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MPMsg.MsgBase)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgBase* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgBase>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MPMsg.MsgBase)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MPMsg.MsgBase)
    MergeFrom(*source);
  }
}

void MsgBase::MergeFrom(const MsgBase& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MPMsg.MsgBase)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg_data().size() > 0) {

    msg_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_data_);
  }
  if (from.msg_type() != 0) {
    set_msg_type(from.msg_type());
  }
  if (from.msg_id() != 0) {
    set_msg_id(from.msg_id());
  }
}

void MsgBase::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MPMsg.MsgBase)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgBase::CopyFrom(const MsgBase& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MPMsg.MsgBase)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgBase::IsInitialized() const {
  return true;
}

void MsgBase::Swap(MsgBase* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgBase::InternalSwap(MsgBase* other) {
  using std::swap;
  msg_data_.Swap(&other->msg_data_);
  swap(msg_type_, other->msg_type_);
  swap(msg_id_, other->msg_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgBase::GetMetadata() const {
  protobuf_MPMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_MPMsgBase_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgBase

// .MPMsg.MsgType msg_type = 1;
void MsgBase::clear_msg_type() {
  msg_type_ = 0;
}
::MPMsg::MsgType MsgBase::msg_type() const {
  // @@protoc_insertion_point(field_get:MPMsg.MsgBase.msg_type)
  return static_cast< ::MPMsg::MsgType >(msg_type_);
}
void MsgBase::set_msg_type(::MPMsg::MsgType value) {
  
  msg_type_ = value;
  // @@protoc_insertion_point(field_set:MPMsg.MsgBase.msg_type)
}

// uint32 msg_id = 2;
void MsgBase::clear_msg_id() {
  msg_id_ = 0u;
}
::google::protobuf::uint32 MsgBase::msg_id() const {
  // @@protoc_insertion_point(field_get:MPMsg.MsgBase.msg_id)
  return msg_id_;
}
void MsgBase::set_msg_id(::google::protobuf::uint32 value) {
  
  msg_id_ = value;
  // @@protoc_insertion_point(field_set:MPMsg.MsgBase.msg_id)
}

// bytes msg_data = 3;
void MsgBase::clear_msg_data() {
  msg_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MsgBase::msg_data() const {
  // @@protoc_insertion_point(field_get:MPMsg.MsgBase.msg_data)
  return msg_data_.GetNoArena();
}
void MsgBase::set_msg_data(const ::std::string& value) {
  
  msg_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MPMsg.MsgBase.msg_data)
}
#if LANG_CXX11
void MsgBase::set_msg_data(::std::string&& value) {
  
  msg_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MPMsg.MsgBase.msg_data)
}
#endif
void MsgBase::set_msg_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msg_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MPMsg.MsgBase.msg_data)
}
void MsgBase::set_msg_data(const void* value, size_t size) {
  
  msg_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MPMsg.MsgBase.msg_data)
}
::std::string* MsgBase::mutable_msg_data() {
  
  // @@protoc_insertion_point(field_mutable:MPMsg.MsgBase.msg_data)
  return msg_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MsgBase::release_msg_data() {
  // @@protoc_insertion_point(field_release:MPMsg.MsgBase.msg_data)
  
  return msg_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MsgBase::set_allocated_msg_data(::std::string* msg_data) {
  if (msg_data != NULL) {
    
  } else {
    
  }
  msg_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg_data);
  // @@protoc_insertion_point(field_set_allocated:MPMsg.MsgBase.msg_data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace MPMsg

// @@protoc_insertion_point(global_scope)
