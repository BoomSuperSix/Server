// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Gate2Game.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "Gate2Game.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace MPMsg {
class GateUserWrapper_Gate2GameDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GateUserWrapper_Gate2Game>
     _instance;
} _GateUserWrapper_Gate2Game_default_instance_;
class GateUserWrapper_Game2GateDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GateUserWrapper_Game2Gate>
     _instance;
} _GateUserWrapper_Game2Gate_default_instance_;
class GameUserLogonSuccess_Game2GateDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GameUserLogonSuccess_Game2Gate>
     _instance;
} _GameUserLogonSuccess_Game2Gate_default_instance_;
class GameUserLogonSuccess_Gate2GameDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GameUserLogonSuccess_Gate2Game>
     _instance;
} _GameUserLogonSuccess_Gate2Game_default_instance_;
class GateUserLogout_Gate2GameDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GateUserLogout_Gate2Game>
     _instance;
} _GateUserLogout_Gate2Game_default_instance_;
class GateUserLogoutRet_Game2GateDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GateUserLogoutRet_Game2Gate>
     _instance;
} _GateUserLogoutRet_Game2Gate_default_instance_;

namespace protobuf_Gate2Game_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[6];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GateUserWrapper_Gate2Game, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GateUserWrapper_Gate2Game, fd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GateUserWrapper_Gate2Game, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GateUserWrapper_Gate2Game, raw_data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GateUserWrapper_Game2Gate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GateUserWrapper_Game2Gate, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GateUserWrapper_Game2Gate, raw_data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameUserLogonSuccess_Game2Gate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameUserLogonSuccess_Game2Gate, fd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameUserLogonSuccess_Game2Gate, user_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameUserLogonSuccess_Gate2Game, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameUserLogonSuccess_Gate2Game, fd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameUserLogonSuccess_Gate2Game, user_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GateUserLogout_Gate2Game, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GateUserLogout_Gate2Game, user_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GateUserLogoutRet_Game2Gate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GateUserLogoutRet_Game2Gate, user_id_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(GateUserWrapper_Gate2Game)},
  { 8, -1, sizeof(GateUserWrapper_Game2Gate)},
  { 15, -1, sizeof(GameUserLogonSuccess_Game2Gate)},
  { 22, -1, sizeof(GameUserLogonSuccess_Gate2Game)},
  { 29, -1, sizeof(GateUserLogout_Gate2Game)},
  { 35, -1, sizeof(GateUserLogoutRet_Game2Gate)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_GateUserWrapper_Gate2Game_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GateUserWrapper_Game2Gate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GameUserLogonSuccess_Game2Gate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GameUserLogonSuccess_Gate2Game_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GateUserLogout_Gate2Game_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GateUserLogoutRet_Game2Gate_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "Gate2Game.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 6);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _GateUserWrapper_Gate2Game_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GateUserWrapper_Gate2Game_default_instance_);_GateUserWrapper_Game2Gate_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GateUserWrapper_Game2Gate_default_instance_);_GameUserLogonSuccess_Game2Gate_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GameUserLogonSuccess_Game2Gate_default_instance_);_GameUserLogonSuccess_Gate2Game_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GameUserLogonSuccess_Gate2Game_default_instance_);_GateUserLogout_Gate2Game_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GateUserLogout_Gate2Game_default_instance_);_GateUserLogoutRet_Game2Gate_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GateUserLogoutRet_Game2Gate_default_instance_);}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\017Gate2Game.proto\022\005MPMsg\"J\n\031GateUserWrap"
      "per_Gate2Game\022\n\n\002fd\030\001 \001(\004\022\017\n\007user_id\030\002 \001"
      "(\004\022\020\n\010raw_data\030\003 \001(\014\">\n\031GateUserWrapper_"
      "Game2Gate\022\017\n\007user_id\030\001 \001(\004\022\020\n\010raw_data\030\002"
      " \001(\014\"=\n\036GameUserLogonSuccess_Game2Gate\022\n"
      "\n\002fd\030\001 \001(\004\022\017\n\007user_id\030\002 \001(\004\"=\n\036GameUserL"
      "ogonSuccess_Gate2Game\022\n\n\002fd\030\001 \001(\004\022\017\n\007use"
      "r_id\030\002 \001(\004\"+\n\030GateUserLogout_Gate2Game\022\017"
      "\n\007user_id\030\001 \001(\004\".\n\033GateUserLogoutRet_Gam"
      "e2Gate\022\017\n\007user_id\030\001 \001(\004b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 391);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Gate2Game.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_Gate2Game_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GateUserWrapper_Gate2Game::kFdFieldNumber;
const int GateUserWrapper_Gate2Game::kUserIdFieldNumber;
const int GateUserWrapper_Gate2Game::kRawDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GateUserWrapper_Gate2Game::GateUserWrapper_Gate2Game()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Gate2Game_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MPMsg.GateUserWrapper_Gate2Game)
}
GateUserWrapper_Gate2Game::GateUserWrapper_Gate2Game(const GateUserWrapper_Gate2Game& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  raw_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.raw_data().size() > 0) {
    raw_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.raw_data_);
  }
  ::memcpy(&fd_, &from.fd_,
    static_cast<size_t>(reinterpret_cast<char*>(&user_id_) -
    reinterpret_cast<char*>(&fd_)) + sizeof(user_id_));
  // @@protoc_insertion_point(copy_constructor:MPMsg.GateUserWrapper_Gate2Game)
}

void GateUserWrapper_Gate2Game::SharedCtor() {
  raw_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&fd_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&user_id_) -
      reinterpret_cast<char*>(&fd_)) + sizeof(user_id_));
  _cached_size_ = 0;
}

GateUserWrapper_Gate2Game::~GateUserWrapper_Gate2Game() {
  // @@protoc_insertion_point(destructor:MPMsg.GateUserWrapper_Gate2Game)
  SharedDtor();
}

void GateUserWrapper_Gate2Game::SharedDtor() {
  raw_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GateUserWrapper_Gate2Game::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GateUserWrapper_Gate2Game::descriptor() {
  protobuf_Gate2Game_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Gate2Game_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GateUserWrapper_Gate2Game& GateUserWrapper_Gate2Game::default_instance() {
  protobuf_Gate2Game_2eproto::InitDefaults();
  return *internal_default_instance();
}

GateUserWrapper_Gate2Game* GateUserWrapper_Gate2Game::New(::google::protobuf::Arena* arena) const {
  GateUserWrapper_Gate2Game* n = new GateUserWrapper_Gate2Game;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GateUserWrapper_Gate2Game::Clear() {
// @@protoc_insertion_point(message_clear_start:MPMsg.GateUserWrapper_Gate2Game)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  raw_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&fd_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&user_id_) -
      reinterpret_cast<char*>(&fd_)) + sizeof(user_id_));
  _internal_metadata_.Clear();
}

bool GateUserWrapper_Gate2Game::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MPMsg.GateUserWrapper_Gate2Game)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 fd = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &fd_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 user_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes raw_data = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_raw_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MPMsg.GateUserWrapper_Gate2Game)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MPMsg.GateUserWrapper_Gate2Game)
  return false;
#undef DO_
}

void GateUserWrapper_Gate2Game::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MPMsg.GateUserWrapper_Gate2Game)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 fd = 1;
  if (this->fd() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->fd(), output);
  }

  // uint64 user_id = 2;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->user_id(), output);
  }

  // bytes raw_data = 3;
  if (this->raw_data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->raw_data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:MPMsg.GateUserWrapper_Gate2Game)
}

::google::protobuf::uint8* GateUserWrapper_Gate2Game::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MPMsg.GateUserWrapper_Gate2Game)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 fd = 1;
  if (this->fd() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->fd(), target);
  }

  // uint64 user_id = 2;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->user_id(), target);
  }

  // bytes raw_data = 3;
  if (this->raw_data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->raw_data(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MPMsg.GateUserWrapper_Gate2Game)
  return target;
}

size_t GateUserWrapper_Gate2Game::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MPMsg.GateUserWrapper_Gate2Game)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes raw_data = 3;
  if (this->raw_data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->raw_data());
  }

  // uint64 fd = 1;
  if (this->fd() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->fd());
  }

  // uint64 user_id = 2;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->user_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GateUserWrapper_Gate2Game::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MPMsg.GateUserWrapper_Gate2Game)
  GOOGLE_DCHECK_NE(&from, this);
  const GateUserWrapper_Gate2Game* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GateUserWrapper_Gate2Game>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MPMsg.GateUserWrapper_Gate2Game)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MPMsg.GateUserWrapper_Gate2Game)
    MergeFrom(*source);
  }
}

void GateUserWrapper_Gate2Game::MergeFrom(const GateUserWrapper_Gate2Game& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MPMsg.GateUserWrapper_Gate2Game)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.raw_data().size() > 0) {

    raw_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.raw_data_);
  }
  if (from.fd() != 0) {
    set_fd(from.fd());
  }
  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
}

void GateUserWrapper_Gate2Game::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MPMsg.GateUserWrapper_Gate2Game)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GateUserWrapper_Gate2Game::CopyFrom(const GateUserWrapper_Gate2Game& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MPMsg.GateUserWrapper_Gate2Game)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GateUserWrapper_Gate2Game::IsInitialized() const {
  return true;
}

void GateUserWrapper_Gate2Game::Swap(GateUserWrapper_Gate2Game* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GateUserWrapper_Gate2Game::InternalSwap(GateUserWrapper_Gate2Game* other) {
  using std::swap;
  raw_data_.Swap(&other->raw_data_);
  swap(fd_, other->fd_);
  swap(user_id_, other->user_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GateUserWrapper_Gate2Game::GetMetadata() const {
  protobuf_Gate2Game_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Gate2Game_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GateUserWrapper_Gate2Game

// uint64 fd = 1;
void GateUserWrapper_Gate2Game::clear_fd() {
  fd_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 GateUserWrapper_Gate2Game::fd() const {
  // @@protoc_insertion_point(field_get:MPMsg.GateUserWrapper_Gate2Game.fd)
  return fd_;
}
void GateUserWrapper_Gate2Game::set_fd(::google::protobuf::uint64 value) {
  
  fd_ = value;
  // @@protoc_insertion_point(field_set:MPMsg.GateUserWrapper_Gate2Game.fd)
}

// uint64 user_id = 2;
void GateUserWrapper_Gate2Game::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 GateUserWrapper_Gate2Game::user_id() const {
  // @@protoc_insertion_point(field_get:MPMsg.GateUserWrapper_Gate2Game.user_id)
  return user_id_;
}
void GateUserWrapper_Gate2Game::set_user_id(::google::protobuf::uint64 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:MPMsg.GateUserWrapper_Gate2Game.user_id)
}

// bytes raw_data = 3;
void GateUserWrapper_Gate2Game::clear_raw_data() {
  raw_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GateUserWrapper_Gate2Game::raw_data() const {
  // @@protoc_insertion_point(field_get:MPMsg.GateUserWrapper_Gate2Game.raw_data)
  return raw_data_.GetNoArena();
}
void GateUserWrapper_Gate2Game::set_raw_data(const ::std::string& value) {
  
  raw_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MPMsg.GateUserWrapper_Gate2Game.raw_data)
}
#if LANG_CXX11
void GateUserWrapper_Gate2Game::set_raw_data(::std::string&& value) {
  
  raw_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MPMsg.GateUserWrapper_Gate2Game.raw_data)
}
#endif
void GateUserWrapper_Gate2Game::set_raw_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  raw_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MPMsg.GateUserWrapper_Gate2Game.raw_data)
}
void GateUserWrapper_Gate2Game::set_raw_data(const void* value, size_t size) {
  
  raw_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MPMsg.GateUserWrapper_Gate2Game.raw_data)
}
::std::string* GateUserWrapper_Gate2Game::mutable_raw_data() {
  
  // @@protoc_insertion_point(field_mutable:MPMsg.GateUserWrapper_Gate2Game.raw_data)
  return raw_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GateUserWrapper_Gate2Game::release_raw_data() {
  // @@protoc_insertion_point(field_release:MPMsg.GateUserWrapper_Gate2Game.raw_data)
  
  return raw_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GateUserWrapper_Gate2Game::set_allocated_raw_data(::std::string* raw_data) {
  if (raw_data != NULL) {
    
  } else {
    
  }
  raw_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), raw_data);
  // @@protoc_insertion_point(field_set_allocated:MPMsg.GateUserWrapper_Gate2Game.raw_data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GateUserWrapper_Game2Gate::kUserIdFieldNumber;
const int GateUserWrapper_Game2Gate::kRawDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GateUserWrapper_Game2Gate::GateUserWrapper_Game2Gate()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Gate2Game_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MPMsg.GateUserWrapper_Game2Gate)
}
GateUserWrapper_Game2Gate::GateUserWrapper_Game2Gate(const GateUserWrapper_Game2Gate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  raw_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.raw_data().size() > 0) {
    raw_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.raw_data_);
  }
  user_id_ = from.user_id_;
  // @@protoc_insertion_point(copy_constructor:MPMsg.GateUserWrapper_Game2Gate)
}

void GateUserWrapper_Game2Gate::SharedCtor() {
  raw_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

GateUserWrapper_Game2Gate::~GateUserWrapper_Game2Gate() {
  // @@protoc_insertion_point(destructor:MPMsg.GateUserWrapper_Game2Gate)
  SharedDtor();
}

void GateUserWrapper_Game2Gate::SharedDtor() {
  raw_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GateUserWrapper_Game2Gate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GateUserWrapper_Game2Gate::descriptor() {
  protobuf_Gate2Game_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Gate2Game_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GateUserWrapper_Game2Gate& GateUserWrapper_Game2Gate::default_instance() {
  protobuf_Gate2Game_2eproto::InitDefaults();
  return *internal_default_instance();
}

GateUserWrapper_Game2Gate* GateUserWrapper_Game2Gate::New(::google::protobuf::Arena* arena) const {
  GateUserWrapper_Game2Gate* n = new GateUserWrapper_Game2Gate;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GateUserWrapper_Game2Gate::Clear() {
// @@protoc_insertion_point(message_clear_start:MPMsg.GateUserWrapper_Game2Gate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  raw_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool GateUserWrapper_Game2Gate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MPMsg.GateUserWrapper_Game2Gate)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes raw_data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_raw_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MPMsg.GateUserWrapper_Game2Gate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MPMsg.GateUserWrapper_Game2Gate)
  return false;
#undef DO_
}

void GateUserWrapper_Game2Gate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MPMsg.GateUserWrapper_Game2Gate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 user_id = 1;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->user_id(), output);
  }

  // bytes raw_data = 2;
  if (this->raw_data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->raw_data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:MPMsg.GateUserWrapper_Game2Gate)
}

::google::protobuf::uint8* GateUserWrapper_Game2Gate::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MPMsg.GateUserWrapper_Game2Gate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 user_id = 1;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->user_id(), target);
  }

  // bytes raw_data = 2;
  if (this->raw_data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->raw_data(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MPMsg.GateUserWrapper_Game2Gate)
  return target;
}

size_t GateUserWrapper_Game2Gate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MPMsg.GateUserWrapper_Game2Gate)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes raw_data = 2;
  if (this->raw_data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->raw_data());
  }

  // uint64 user_id = 1;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->user_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GateUserWrapper_Game2Gate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MPMsg.GateUserWrapper_Game2Gate)
  GOOGLE_DCHECK_NE(&from, this);
  const GateUserWrapper_Game2Gate* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GateUserWrapper_Game2Gate>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MPMsg.GateUserWrapper_Game2Gate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MPMsg.GateUserWrapper_Game2Gate)
    MergeFrom(*source);
  }
}

void GateUserWrapper_Game2Gate::MergeFrom(const GateUserWrapper_Game2Gate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MPMsg.GateUserWrapper_Game2Gate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.raw_data().size() > 0) {

    raw_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.raw_data_);
  }
  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
}

void GateUserWrapper_Game2Gate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MPMsg.GateUserWrapper_Game2Gate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GateUserWrapper_Game2Gate::CopyFrom(const GateUserWrapper_Game2Gate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MPMsg.GateUserWrapper_Game2Gate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GateUserWrapper_Game2Gate::IsInitialized() const {
  return true;
}

void GateUserWrapper_Game2Gate::Swap(GateUserWrapper_Game2Gate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GateUserWrapper_Game2Gate::InternalSwap(GateUserWrapper_Game2Gate* other) {
  using std::swap;
  raw_data_.Swap(&other->raw_data_);
  swap(user_id_, other->user_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GateUserWrapper_Game2Gate::GetMetadata() const {
  protobuf_Gate2Game_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Gate2Game_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GateUserWrapper_Game2Gate

// uint64 user_id = 1;
void GateUserWrapper_Game2Gate::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 GateUserWrapper_Game2Gate::user_id() const {
  // @@protoc_insertion_point(field_get:MPMsg.GateUserWrapper_Game2Gate.user_id)
  return user_id_;
}
void GateUserWrapper_Game2Gate::set_user_id(::google::protobuf::uint64 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:MPMsg.GateUserWrapper_Game2Gate.user_id)
}

// bytes raw_data = 2;
void GateUserWrapper_Game2Gate::clear_raw_data() {
  raw_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GateUserWrapper_Game2Gate::raw_data() const {
  // @@protoc_insertion_point(field_get:MPMsg.GateUserWrapper_Game2Gate.raw_data)
  return raw_data_.GetNoArena();
}
void GateUserWrapper_Game2Gate::set_raw_data(const ::std::string& value) {
  
  raw_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MPMsg.GateUserWrapper_Game2Gate.raw_data)
}
#if LANG_CXX11
void GateUserWrapper_Game2Gate::set_raw_data(::std::string&& value) {
  
  raw_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MPMsg.GateUserWrapper_Game2Gate.raw_data)
}
#endif
void GateUserWrapper_Game2Gate::set_raw_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  raw_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MPMsg.GateUserWrapper_Game2Gate.raw_data)
}
void GateUserWrapper_Game2Gate::set_raw_data(const void* value, size_t size) {
  
  raw_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MPMsg.GateUserWrapper_Game2Gate.raw_data)
}
::std::string* GateUserWrapper_Game2Gate::mutable_raw_data() {
  
  // @@protoc_insertion_point(field_mutable:MPMsg.GateUserWrapper_Game2Gate.raw_data)
  return raw_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GateUserWrapper_Game2Gate::release_raw_data() {
  // @@protoc_insertion_point(field_release:MPMsg.GateUserWrapper_Game2Gate.raw_data)
  
  return raw_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GateUserWrapper_Game2Gate::set_allocated_raw_data(::std::string* raw_data) {
  if (raw_data != NULL) {
    
  } else {
    
  }
  raw_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), raw_data);
  // @@protoc_insertion_point(field_set_allocated:MPMsg.GateUserWrapper_Game2Gate.raw_data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GameUserLogonSuccess_Game2Gate::kFdFieldNumber;
const int GameUserLogonSuccess_Game2Gate::kUserIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GameUserLogonSuccess_Game2Gate::GameUserLogonSuccess_Game2Gate()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Gate2Game_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MPMsg.GameUserLogonSuccess_Game2Gate)
}
GameUserLogonSuccess_Game2Gate::GameUserLogonSuccess_Game2Gate(const GameUserLogonSuccess_Game2Gate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&fd_, &from.fd_,
    static_cast<size_t>(reinterpret_cast<char*>(&user_id_) -
    reinterpret_cast<char*>(&fd_)) + sizeof(user_id_));
  // @@protoc_insertion_point(copy_constructor:MPMsg.GameUserLogonSuccess_Game2Gate)
}

void GameUserLogonSuccess_Game2Gate::SharedCtor() {
  ::memset(&fd_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&user_id_) -
      reinterpret_cast<char*>(&fd_)) + sizeof(user_id_));
  _cached_size_ = 0;
}

GameUserLogonSuccess_Game2Gate::~GameUserLogonSuccess_Game2Gate() {
  // @@protoc_insertion_point(destructor:MPMsg.GameUserLogonSuccess_Game2Gate)
  SharedDtor();
}

void GameUserLogonSuccess_Game2Gate::SharedDtor() {
}

void GameUserLogonSuccess_Game2Gate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GameUserLogonSuccess_Game2Gate::descriptor() {
  protobuf_Gate2Game_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Gate2Game_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GameUserLogonSuccess_Game2Gate& GameUserLogonSuccess_Game2Gate::default_instance() {
  protobuf_Gate2Game_2eproto::InitDefaults();
  return *internal_default_instance();
}

GameUserLogonSuccess_Game2Gate* GameUserLogonSuccess_Game2Gate::New(::google::protobuf::Arena* arena) const {
  GameUserLogonSuccess_Game2Gate* n = new GameUserLogonSuccess_Game2Gate;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GameUserLogonSuccess_Game2Gate::Clear() {
// @@protoc_insertion_point(message_clear_start:MPMsg.GameUserLogonSuccess_Game2Gate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&fd_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&user_id_) -
      reinterpret_cast<char*>(&fd_)) + sizeof(user_id_));
  _internal_metadata_.Clear();
}

bool GameUserLogonSuccess_Game2Gate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MPMsg.GameUserLogonSuccess_Game2Gate)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 fd = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &fd_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 user_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MPMsg.GameUserLogonSuccess_Game2Gate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MPMsg.GameUserLogonSuccess_Game2Gate)
  return false;
#undef DO_
}

void GameUserLogonSuccess_Game2Gate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MPMsg.GameUserLogonSuccess_Game2Gate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 fd = 1;
  if (this->fd() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->fd(), output);
  }

  // uint64 user_id = 2;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->user_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:MPMsg.GameUserLogonSuccess_Game2Gate)
}

::google::protobuf::uint8* GameUserLogonSuccess_Game2Gate::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MPMsg.GameUserLogonSuccess_Game2Gate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 fd = 1;
  if (this->fd() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->fd(), target);
  }

  // uint64 user_id = 2;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->user_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MPMsg.GameUserLogonSuccess_Game2Gate)
  return target;
}

size_t GameUserLogonSuccess_Game2Gate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MPMsg.GameUserLogonSuccess_Game2Gate)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 fd = 1;
  if (this->fd() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->fd());
  }

  // uint64 user_id = 2;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->user_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GameUserLogonSuccess_Game2Gate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MPMsg.GameUserLogonSuccess_Game2Gate)
  GOOGLE_DCHECK_NE(&from, this);
  const GameUserLogonSuccess_Game2Gate* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GameUserLogonSuccess_Game2Gate>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MPMsg.GameUserLogonSuccess_Game2Gate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MPMsg.GameUserLogonSuccess_Game2Gate)
    MergeFrom(*source);
  }
}

void GameUserLogonSuccess_Game2Gate::MergeFrom(const GameUserLogonSuccess_Game2Gate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MPMsg.GameUserLogonSuccess_Game2Gate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.fd() != 0) {
    set_fd(from.fd());
  }
  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
}

void GameUserLogonSuccess_Game2Gate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MPMsg.GameUserLogonSuccess_Game2Gate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GameUserLogonSuccess_Game2Gate::CopyFrom(const GameUserLogonSuccess_Game2Gate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MPMsg.GameUserLogonSuccess_Game2Gate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GameUserLogonSuccess_Game2Gate::IsInitialized() const {
  return true;
}

void GameUserLogonSuccess_Game2Gate::Swap(GameUserLogonSuccess_Game2Gate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GameUserLogonSuccess_Game2Gate::InternalSwap(GameUserLogonSuccess_Game2Gate* other) {
  using std::swap;
  swap(fd_, other->fd_);
  swap(user_id_, other->user_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GameUserLogonSuccess_Game2Gate::GetMetadata() const {
  protobuf_Gate2Game_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Gate2Game_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GameUserLogonSuccess_Game2Gate

// uint64 fd = 1;
void GameUserLogonSuccess_Game2Gate::clear_fd() {
  fd_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 GameUserLogonSuccess_Game2Gate::fd() const {
  // @@protoc_insertion_point(field_get:MPMsg.GameUserLogonSuccess_Game2Gate.fd)
  return fd_;
}
void GameUserLogonSuccess_Game2Gate::set_fd(::google::protobuf::uint64 value) {
  
  fd_ = value;
  // @@protoc_insertion_point(field_set:MPMsg.GameUserLogonSuccess_Game2Gate.fd)
}

// uint64 user_id = 2;
void GameUserLogonSuccess_Game2Gate::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 GameUserLogonSuccess_Game2Gate::user_id() const {
  // @@protoc_insertion_point(field_get:MPMsg.GameUserLogonSuccess_Game2Gate.user_id)
  return user_id_;
}
void GameUserLogonSuccess_Game2Gate::set_user_id(::google::protobuf::uint64 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:MPMsg.GameUserLogonSuccess_Game2Gate.user_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GameUserLogonSuccess_Gate2Game::kFdFieldNumber;
const int GameUserLogonSuccess_Gate2Game::kUserIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GameUserLogonSuccess_Gate2Game::GameUserLogonSuccess_Gate2Game()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Gate2Game_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MPMsg.GameUserLogonSuccess_Gate2Game)
}
GameUserLogonSuccess_Gate2Game::GameUserLogonSuccess_Gate2Game(const GameUserLogonSuccess_Gate2Game& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&fd_, &from.fd_,
    static_cast<size_t>(reinterpret_cast<char*>(&user_id_) -
    reinterpret_cast<char*>(&fd_)) + sizeof(user_id_));
  // @@protoc_insertion_point(copy_constructor:MPMsg.GameUserLogonSuccess_Gate2Game)
}

void GameUserLogonSuccess_Gate2Game::SharedCtor() {
  ::memset(&fd_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&user_id_) -
      reinterpret_cast<char*>(&fd_)) + sizeof(user_id_));
  _cached_size_ = 0;
}

GameUserLogonSuccess_Gate2Game::~GameUserLogonSuccess_Gate2Game() {
  // @@protoc_insertion_point(destructor:MPMsg.GameUserLogonSuccess_Gate2Game)
  SharedDtor();
}

void GameUserLogonSuccess_Gate2Game::SharedDtor() {
}

void GameUserLogonSuccess_Gate2Game::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GameUserLogonSuccess_Gate2Game::descriptor() {
  protobuf_Gate2Game_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Gate2Game_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GameUserLogonSuccess_Gate2Game& GameUserLogonSuccess_Gate2Game::default_instance() {
  protobuf_Gate2Game_2eproto::InitDefaults();
  return *internal_default_instance();
}

GameUserLogonSuccess_Gate2Game* GameUserLogonSuccess_Gate2Game::New(::google::protobuf::Arena* arena) const {
  GameUserLogonSuccess_Gate2Game* n = new GameUserLogonSuccess_Gate2Game;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GameUserLogonSuccess_Gate2Game::Clear() {
// @@protoc_insertion_point(message_clear_start:MPMsg.GameUserLogonSuccess_Gate2Game)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&fd_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&user_id_) -
      reinterpret_cast<char*>(&fd_)) + sizeof(user_id_));
  _internal_metadata_.Clear();
}

bool GameUserLogonSuccess_Gate2Game::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MPMsg.GameUserLogonSuccess_Gate2Game)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 fd = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &fd_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 user_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MPMsg.GameUserLogonSuccess_Gate2Game)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MPMsg.GameUserLogonSuccess_Gate2Game)
  return false;
#undef DO_
}

void GameUserLogonSuccess_Gate2Game::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MPMsg.GameUserLogonSuccess_Gate2Game)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 fd = 1;
  if (this->fd() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->fd(), output);
  }

  // uint64 user_id = 2;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->user_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:MPMsg.GameUserLogonSuccess_Gate2Game)
}

::google::protobuf::uint8* GameUserLogonSuccess_Gate2Game::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MPMsg.GameUserLogonSuccess_Gate2Game)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 fd = 1;
  if (this->fd() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->fd(), target);
  }

  // uint64 user_id = 2;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->user_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MPMsg.GameUserLogonSuccess_Gate2Game)
  return target;
}

size_t GameUserLogonSuccess_Gate2Game::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MPMsg.GameUserLogonSuccess_Gate2Game)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 fd = 1;
  if (this->fd() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->fd());
  }

  // uint64 user_id = 2;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->user_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GameUserLogonSuccess_Gate2Game::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MPMsg.GameUserLogonSuccess_Gate2Game)
  GOOGLE_DCHECK_NE(&from, this);
  const GameUserLogonSuccess_Gate2Game* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GameUserLogonSuccess_Gate2Game>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MPMsg.GameUserLogonSuccess_Gate2Game)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MPMsg.GameUserLogonSuccess_Gate2Game)
    MergeFrom(*source);
  }
}

void GameUserLogonSuccess_Gate2Game::MergeFrom(const GameUserLogonSuccess_Gate2Game& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MPMsg.GameUserLogonSuccess_Gate2Game)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.fd() != 0) {
    set_fd(from.fd());
  }
  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
}

void GameUserLogonSuccess_Gate2Game::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MPMsg.GameUserLogonSuccess_Gate2Game)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GameUserLogonSuccess_Gate2Game::CopyFrom(const GameUserLogonSuccess_Gate2Game& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MPMsg.GameUserLogonSuccess_Gate2Game)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GameUserLogonSuccess_Gate2Game::IsInitialized() const {
  return true;
}

void GameUserLogonSuccess_Gate2Game::Swap(GameUserLogonSuccess_Gate2Game* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GameUserLogonSuccess_Gate2Game::InternalSwap(GameUserLogonSuccess_Gate2Game* other) {
  using std::swap;
  swap(fd_, other->fd_);
  swap(user_id_, other->user_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GameUserLogonSuccess_Gate2Game::GetMetadata() const {
  protobuf_Gate2Game_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Gate2Game_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GameUserLogonSuccess_Gate2Game

// uint64 fd = 1;
void GameUserLogonSuccess_Gate2Game::clear_fd() {
  fd_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 GameUserLogonSuccess_Gate2Game::fd() const {
  // @@protoc_insertion_point(field_get:MPMsg.GameUserLogonSuccess_Gate2Game.fd)
  return fd_;
}
void GameUserLogonSuccess_Gate2Game::set_fd(::google::protobuf::uint64 value) {
  
  fd_ = value;
  // @@protoc_insertion_point(field_set:MPMsg.GameUserLogonSuccess_Gate2Game.fd)
}

// uint64 user_id = 2;
void GameUserLogonSuccess_Gate2Game::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 GameUserLogonSuccess_Gate2Game::user_id() const {
  // @@protoc_insertion_point(field_get:MPMsg.GameUserLogonSuccess_Gate2Game.user_id)
  return user_id_;
}
void GameUserLogonSuccess_Gate2Game::set_user_id(::google::protobuf::uint64 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:MPMsg.GameUserLogonSuccess_Gate2Game.user_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GateUserLogout_Gate2Game::kUserIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GateUserLogout_Gate2Game::GateUserLogout_Gate2Game()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Gate2Game_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MPMsg.GateUserLogout_Gate2Game)
}
GateUserLogout_Gate2Game::GateUserLogout_Gate2Game(const GateUserLogout_Gate2Game& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  user_id_ = from.user_id_;
  // @@protoc_insertion_point(copy_constructor:MPMsg.GateUserLogout_Gate2Game)
}

void GateUserLogout_Gate2Game::SharedCtor() {
  user_id_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

GateUserLogout_Gate2Game::~GateUserLogout_Gate2Game() {
  // @@protoc_insertion_point(destructor:MPMsg.GateUserLogout_Gate2Game)
  SharedDtor();
}

void GateUserLogout_Gate2Game::SharedDtor() {
}

void GateUserLogout_Gate2Game::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GateUserLogout_Gate2Game::descriptor() {
  protobuf_Gate2Game_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Gate2Game_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GateUserLogout_Gate2Game& GateUserLogout_Gate2Game::default_instance() {
  protobuf_Gate2Game_2eproto::InitDefaults();
  return *internal_default_instance();
}

GateUserLogout_Gate2Game* GateUserLogout_Gate2Game::New(::google::protobuf::Arena* arena) const {
  GateUserLogout_Gate2Game* n = new GateUserLogout_Gate2Game;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GateUserLogout_Gate2Game::Clear() {
// @@protoc_insertion_point(message_clear_start:MPMsg.GateUserLogout_Gate2Game)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  user_id_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool GateUserLogout_Gate2Game::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MPMsg.GateUserLogout_Gate2Game)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MPMsg.GateUserLogout_Gate2Game)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MPMsg.GateUserLogout_Gate2Game)
  return false;
#undef DO_
}

void GateUserLogout_Gate2Game::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MPMsg.GateUserLogout_Gate2Game)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 user_id = 1;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->user_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:MPMsg.GateUserLogout_Gate2Game)
}

::google::protobuf::uint8* GateUserLogout_Gate2Game::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MPMsg.GateUserLogout_Gate2Game)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 user_id = 1;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->user_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MPMsg.GateUserLogout_Gate2Game)
  return target;
}

size_t GateUserLogout_Gate2Game::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MPMsg.GateUserLogout_Gate2Game)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 user_id = 1;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->user_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GateUserLogout_Gate2Game::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MPMsg.GateUserLogout_Gate2Game)
  GOOGLE_DCHECK_NE(&from, this);
  const GateUserLogout_Gate2Game* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GateUserLogout_Gate2Game>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MPMsg.GateUserLogout_Gate2Game)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MPMsg.GateUserLogout_Gate2Game)
    MergeFrom(*source);
  }
}

void GateUserLogout_Gate2Game::MergeFrom(const GateUserLogout_Gate2Game& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MPMsg.GateUserLogout_Gate2Game)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
}

void GateUserLogout_Gate2Game::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MPMsg.GateUserLogout_Gate2Game)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GateUserLogout_Gate2Game::CopyFrom(const GateUserLogout_Gate2Game& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MPMsg.GateUserLogout_Gate2Game)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GateUserLogout_Gate2Game::IsInitialized() const {
  return true;
}

void GateUserLogout_Gate2Game::Swap(GateUserLogout_Gate2Game* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GateUserLogout_Gate2Game::InternalSwap(GateUserLogout_Gate2Game* other) {
  using std::swap;
  swap(user_id_, other->user_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GateUserLogout_Gate2Game::GetMetadata() const {
  protobuf_Gate2Game_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Gate2Game_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GateUserLogout_Gate2Game

// uint64 user_id = 1;
void GateUserLogout_Gate2Game::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 GateUserLogout_Gate2Game::user_id() const {
  // @@protoc_insertion_point(field_get:MPMsg.GateUserLogout_Gate2Game.user_id)
  return user_id_;
}
void GateUserLogout_Gate2Game::set_user_id(::google::protobuf::uint64 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:MPMsg.GateUserLogout_Gate2Game.user_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GateUserLogoutRet_Game2Gate::kUserIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GateUserLogoutRet_Game2Gate::GateUserLogoutRet_Game2Gate()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Gate2Game_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MPMsg.GateUserLogoutRet_Game2Gate)
}
GateUserLogoutRet_Game2Gate::GateUserLogoutRet_Game2Gate(const GateUserLogoutRet_Game2Gate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  user_id_ = from.user_id_;
  // @@protoc_insertion_point(copy_constructor:MPMsg.GateUserLogoutRet_Game2Gate)
}

void GateUserLogoutRet_Game2Gate::SharedCtor() {
  user_id_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

GateUserLogoutRet_Game2Gate::~GateUserLogoutRet_Game2Gate() {
  // @@protoc_insertion_point(destructor:MPMsg.GateUserLogoutRet_Game2Gate)
  SharedDtor();
}

void GateUserLogoutRet_Game2Gate::SharedDtor() {
}

void GateUserLogoutRet_Game2Gate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GateUserLogoutRet_Game2Gate::descriptor() {
  protobuf_Gate2Game_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Gate2Game_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GateUserLogoutRet_Game2Gate& GateUserLogoutRet_Game2Gate::default_instance() {
  protobuf_Gate2Game_2eproto::InitDefaults();
  return *internal_default_instance();
}

GateUserLogoutRet_Game2Gate* GateUserLogoutRet_Game2Gate::New(::google::protobuf::Arena* arena) const {
  GateUserLogoutRet_Game2Gate* n = new GateUserLogoutRet_Game2Gate;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GateUserLogoutRet_Game2Gate::Clear() {
// @@protoc_insertion_point(message_clear_start:MPMsg.GateUserLogoutRet_Game2Gate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  user_id_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool GateUserLogoutRet_Game2Gate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MPMsg.GateUserLogoutRet_Game2Gate)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MPMsg.GateUserLogoutRet_Game2Gate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MPMsg.GateUserLogoutRet_Game2Gate)
  return false;
#undef DO_
}

void GateUserLogoutRet_Game2Gate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MPMsg.GateUserLogoutRet_Game2Gate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 user_id = 1;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->user_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:MPMsg.GateUserLogoutRet_Game2Gate)
}

::google::protobuf::uint8* GateUserLogoutRet_Game2Gate::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MPMsg.GateUserLogoutRet_Game2Gate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 user_id = 1;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->user_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MPMsg.GateUserLogoutRet_Game2Gate)
  return target;
}

size_t GateUserLogoutRet_Game2Gate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MPMsg.GateUserLogoutRet_Game2Gate)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 user_id = 1;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->user_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GateUserLogoutRet_Game2Gate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MPMsg.GateUserLogoutRet_Game2Gate)
  GOOGLE_DCHECK_NE(&from, this);
  const GateUserLogoutRet_Game2Gate* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GateUserLogoutRet_Game2Gate>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MPMsg.GateUserLogoutRet_Game2Gate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MPMsg.GateUserLogoutRet_Game2Gate)
    MergeFrom(*source);
  }
}

void GateUserLogoutRet_Game2Gate::MergeFrom(const GateUserLogoutRet_Game2Gate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MPMsg.GateUserLogoutRet_Game2Gate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
}

void GateUserLogoutRet_Game2Gate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MPMsg.GateUserLogoutRet_Game2Gate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GateUserLogoutRet_Game2Gate::CopyFrom(const GateUserLogoutRet_Game2Gate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MPMsg.GateUserLogoutRet_Game2Gate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GateUserLogoutRet_Game2Gate::IsInitialized() const {
  return true;
}

void GateUserLogoutRet_Game2Gate::Swap(GateUserLogoutRet_Game2Gate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GateUserLogoutRet_Game2Gate::InternalSwap(GateUserLogoutRet_Game2Gate* other) {
  using std::swap;
  swap(user_id_, other->user_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GateUserLogoutRet_Game2Gate::GetMetadata() const {
  protobuf_Gate2Game_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Gate2Game_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GateUserLogoutRet_Game2Gate

// uint64 user_id = 1;
void GateUserLogoutRet_Game2Gate::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 GateUserLogoutRet_Game2Gate::user_id() const {
  // @@protoc_insertion_point(field_get:MPMsg.GateUserLogoutRet_Game2Gate.user_id)
  return user_id_;
}
void GateUserLogoutRet_Game2Gate::set_user_id(::google::protobuf::uint64 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:MPMsg.GateUserLogoutRet_Game2Gate.user_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace MPMsg

// @@protoc_insertion_point(global_scope)
