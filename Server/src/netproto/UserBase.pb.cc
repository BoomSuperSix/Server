// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: UserBase.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "UserBase.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
class UserLogon_C2SDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<UserLogon_C2S>
     _instance;
} _UserLogon_C2S_default_instance_;
class UserLogon_S2CDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<UserLogon_S2C>
     _instance;
} _UserLogon_S2C_default_instance_;
class CreateRole_C2SDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<CreateRole_C2S>
     _instance;
} _CreateRole_C2S_default_instance_;
class CreateRole_S2CDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<CreateRole_S2C>
     _instance;
} _CreateRole_S2C_default_instance_;

namespace protobuf_UserBase_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[4];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserLogon_C2S, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserLogon_C2S, account_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserLogon_C2S, password_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserLogon_C2S, platfrom_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserLogon_C2S, serverid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserLogon_C2S, logon_key_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserLogon_S2C, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserLogon_S2C, errcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserLogon_S2C, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserLogon_S2C, account_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserLogon_S2C, platfrom_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserLogon_S2C, serverid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserLogon_S2C, logon_key_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateRole_C2S, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateRole_S2C, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(UserLogon_C2S)},
  { 10, -1, sizeof(UserLogon_S2C)},
  { 21, -1, sizeof(CreateRole_C2S)},
  { 26, -1, sizeof(CreateRole_S2C)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_UserLogon_C2S_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UserLogon_S2C_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CreateRole_C2S_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CreateRole_S2C_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "UserBase.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::protobuf_UserErrCode_2eproto::InitDefaults();
  _UserLogon_C2S_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_UserLogon_C2S_default_instance_);_UserLogon_S2C_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_UserLogon_S2C_default_instance_);_CreateRole_C2S_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_CreateRole_C2S_default_instance_);_CreateRole_S2C_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_CreateRole_S2C_default_instance_);}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\016UserBase.proto\032\021UserErrCode.proto\"i\n\rU"
      "serLogon_C2S\022\017\n\007account\030\001 \001(\t\022\020\n\010passwor"
      "d\030\002 \001(\t\022\020\n\010platfrom\030\003 \001(\r\022\020\n\010serverid\030\004 "
      "\001(\r\022\021\n\tlogon_key\030\005 \001(\t\"\207\001\n\rUserLogon_S2C"
      "\022\035\n\007errcode\030\001 \001(\0162\014.UserErrCode\022\017\n\007user_"
      "id\030\002 \001(\004\022\017\n\007account\030\003 \001(\t\022\020\n\010platfrom\030\004 "
      "\001(\r\022\020\n\010serverid\030\005 \001(\r\022\021\n\tlogon_key\030\006 \001(\t"
      "\"\020\n\016CreateRole_C2S\"\020\n\016CreateRole_S2Cb\006pr"
      "oto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 324);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "UserBase.proto", &protobuf_RegisterTypes);
  ::protobuf_UserErrCode_2eproto::AddDescriptors();
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_UserBase_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserLogon_C2S::kAccountFieldNumber;
const int UserLogon_C2S::kPasswordFieldNumber;
const int UserLogon_C2S::kPlatfromFieldNumber;
const int UserLogon_C2S::kServeridFieldNumber;
const int UserLogon_C2S::kLogonKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserLogon_C2S::UserLogon_C2S()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_UserBase_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:UserLogon_C2S)
}
UserLogon_C2S::UserLogon_C2S(const UserLogon_C2S& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.account().size() > 0) {
    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.password().size() > 0) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  logon_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.logon_key().size() > 0) {
    logon_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.logon_key_);
  }
  ::memcpy(&platfrom_, &from.platfrom_,
    static_cast<size_t>(reinterpret_cast<char*>(&serverid_) -
    reinterpret_cast<char*>(&platfrom_)) + sizeof(serverid_));
  // @@protoc_insertion_point(copy_constructor:UserLogon_C2S)
}

void UserLogon_C2S::SharedCtor() {
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  logon_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&platfrom_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&serverid_) -
      reinterpret_cast<char*>(&platfrom_)) + sizeof(serverid_));
  _cached_size_ = 0;
}

UserLogon_C2S::~UserLogon_C2S() {
  // @@protoc_insertion_point(destructor:UserLogon_C2S)
  SharedDtor();
}

void UserLogon_C2S::SharedDtor() {
  account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  logon_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UserLogon_C2S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserLogon_C2S::descriptor() {
  protobuf_UserBase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_UserBase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserLogon_C2S& UserLogon_C2S::default_instance() {
  protobuf_UserBase_2eproto::InitDefaults();
  return *internal_default_instance();
}

UserLogon_C2S* UserLogon_C2S::New(::google::protobuf::Arena* arena) const {
  UserLogon_C2S* n = new UserLogon_C2S;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UserLogon_C2S::Clear() {
// @@protoc_insertion_point(message_clear_start:UserLogon_C2S)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  logon_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&platfrom_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&serverid_) -
      reinterpret_cast<char*>(&platfrom_)) + sizeof(serverid_));
  _internal_metadata_.Clear();
}

bool UserLogon_C2S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UserLogon_C2S)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string account = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->account().data(), static_cast<int>(this->account().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "UserLogon_C2S.account"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string password = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->password().data(), static_cast<int>(this->password().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "UserLogon_C2S.password"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 platfrom = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &platfrom_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 serverid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &serverid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string logon_key = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_logon_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->logon_key().data(), static_cast<int>(this->logon_key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "UserLogon_C2S.logon_key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UserLogon_C2S)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UserLogon_C2S)
  return false;
#undef DO_
}

void UserLogon_C2S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UserLogon_C2S)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string account = 1;
  if (this->account().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account().data(), static_cast<int>(this->account().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "UserLogon_C2S.account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->account(), output);
  }

  // string password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "UserLogon_C2S.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->password(), output);
  }

  // uint32 platfrom = 3;
  if (this->platfrom() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->platfrom(), output);
  }

  // uint32 serverid = 4;
  if (this->serverid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->serverid(), output);
  }

  // string logon_key = 5;
  if (this->logon_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->logon_key().data(), static_cast<int>(this->logon_key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "UserLogon_C2S.logon_key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->logon_key(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:UserLogon_C2S)
}

::google::protobuf::uint8* UserLogon_C2S::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UserLogon_C2S)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string account = 1;
  if (this->account().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account().data(), static_cast<int>(this->account().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "UserLogon_C2S.account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->account(), target);
  }

  // string password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "UserLogon_C2S.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->password(), target);
  }

  // uint32 platfrom = 3;
  if (this->platfrom() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->platfrom(), target);
  }

  // uint32 serverid = 4;
  if (this->serverid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->serverid(), target);
  }

  // string logon_key = 5;
  if (this->logon_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->logon_key().data(), static_cast<int>(this->logon_key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "UserLogon_C2S.logon_key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->logon_key(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UserLogon_C2S)
  return target;
}

size_t UserLogon_C2S::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UserLogon_C2S)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string account = 1;
  if (this->account().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->account());
  }

  // string password = 2;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  // string logon_key = 5;
  if (this->logon_key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->logon_key());
  }

  // uint32 platfrom = 3;
  if (this->platfrom() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->platfrom());
  }

  // uint32 serverid = 4;
  if (this->serverid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->serverid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserLogon_C2S::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UserLogon_C2S)
  GOOGLE_DCHECK_NE(&from, this);
  const UserLogon_C2S* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserLogon_C2S>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UserLogon_C2S)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UserLogon_C2S)
    MergeFrom(*source);
  }
}

void UserLogon_C2S::MergeFrom(const UserLogon_C2S& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UserLogon_C2S)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.account().size() > 0) {

    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  if (from.password().size() > 0) {

    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  if (from.logon_key().size() > 0) {

    logon_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.logon_key_);
  }
  if (from.platfrom() != 0) {
    set_platfrom(from.platfrom());
  }
  if (from.serverid() != 0) {
    set_serverid(from.serverid());
  }
}

void UserLogon_C2S::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UserLogon_C2S)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserLogon_C2S::CopyFrom(const UserLogon_C2S& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UserLogon_C2S)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserLogon_C2S::IsInitialized() const {
  return true;
}

void UserLogon_C2S::Swap(UserLogon_C2S* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserLogon_C2S::InternalSwap(UserLogon_C2S* other) {
  using std::swap;
  account_.Swap(&other->account_);
  password_.Swap(&other->password_);
  logon_key_.Swap(&other->logon_key_);
  swap(platfrom_, other->platfrom_);
  swap(serverid_, other->serverid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UserLogon_C2S::GetMetadata() const {
  protobuf_UserBase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_UserBase_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UserLogon_C2S

// string account = 1;
void UserLogon_C2S::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UserLogon_C2S::account() const {
  // @@protoc_insertion_point(field_get:UserLogon_C2S.account)
  return account_.GetNoArena();
}
void UserLogon_C2S::set_account(const ::std::string& value) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:UserLogon_C2S.account)
}
#if LANG_CXX11
void UserLogon_C2S::set_account(::std::string&& value) {
  
  account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:UserLogon_C2S.account)
}
#endif
void UserLogon_C2S::set_account(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:UserLogon_C2S.account)
}
void UserLogon_C2S::set_account(const char* value, size_t size) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:UserLogon_C2S.account)
}
::std::string* UserLogon_C2S::mutable_account() {
  
  // @@protoc_insertion_point(field_mutable:UserLogon_C2S.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UserLogon_C2S::release_account() {
  // @@protoc_insertion_point(field_release:UserLogon_C2S.account)
  
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UserLogon_C2S::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    
  } else {
    
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:UserLogon_C2S.account)
}

// string password = 2;
void UserLogon_C2S::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UserLogon_C2S::password() const {
  // @@protoc_insertion_point(field_get:UserLogon_C2S.password)
  return password_.GetNoArena();
}
void UserLogon_C2S::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:UserLogon_C2S.password)
}
#if LANG_CXX11
void UserLogon_C2S::set_password(::std::string&& value) {
  
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:UserLogon_C2S.password)
}
#endif
void UserLogon_C2S::set_password(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:UserLogon_C2S.password)
}
void UserLogon_C2S::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:UserLogon_C2S.password)
}
::std::string* UserLogon_C2S::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:UserLogon_C2S.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UserLogon_C2S::release_password() {
  // @@protoc_insertion_point(field_release:UserLogon_C2S.password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UserLogon_C2S::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:UserLogon_C2S.password)
}

// uint32 platfrom = 3;
void UserLogon_C2S::clear_platfrom() {
  platfrom_ = 0u;
}
::google::protobuf::uint32 UserLogon_C2S::platfrom() const {
  // @@protoc_insertion_point(field_get:UserLogon_C2S.platfrom)
  return platfrom_;
}
void UserLogon_C2S::set_platfrom(::google::protobuf::uint32 value) {
  
  platfrom_ = value;
  // @@protoc_insertion_point(field_set:UserLogon_C2S.platfrom)
}

// uint32 serverid = 4;
void UserLogon_C2S::clear_serverid() {
  serverid_ = 0u;
}
::google::protobuf::uint32 UserLogon_C2S::serverid() const {
  // @@protoc_insertion_point(field_get:UserLogon_C2S.serverid)
  return serverid_;
}
void UserLogon_C2S::set_serverid(::google::protobuf::uint32 value) {
  
  serverid_ = value;
  // @@protoc_insertion_point(field_set:UserLogon_C2S.serverid)
}

// string logon_key = 5;
void UserLogon_C2S::clear_logon_key() {
  logon_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UserLogon_C2S::logon_key() const {
  // @@protoc_insertion_point(field_get:UserLogon_C2S.logon_key)
  return logon_key_.GetNoArena();
}
void UserLogon_C2S::set_logon_key(const ::std::string& value) {
  
  logon_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:UserLogon_C2S.logon_key)
}
#if LANG_CXX11
void UserLogon_C2S::set_logon_key(::std::string&& value) {
  
  logon_key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:UserLogon_C2S.logon_key)
}
#endif
void UserLogon_C2S::set_logon_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  logon_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:UserLogon_C2S.logon_key)
}
void UserLogon_C2S::set_logon_key(const char* value, size_t size) {
  
  logon_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:UserLogon_C2S.logon_key)
}
::std::string* UserLogon_C2S::mutable_logon_key() {
  
  // @@protoc_insertion_point(field_mutable:UserLogon_C2S.logon_key)
  return logon_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UserLogon_C2S::release_logon_key() {
  // @@protoc_insertion_point(field_release:UserLogon_C2S.logon_key)
  
  return logon_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UserLogon_C2S::set_allocated_logon_key(::std::string* logon_key) {
  if (logon_key != NULL) {
    
  } else {
    
  }
  logon_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), logon_key);
  // @@protoc_insertion_point(field_set_allocated:UserLogon_C2S.logon_key)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserLogon_S2C::kErrcodeFieldNumber;
const int UserLogon_S2C::kUserIdFieldNumber;
const int UserLogon_S2C::kAccountFieldNumber;
const int UserLogon_S2C::kPlatfromFieldNumber;
const int UserLogon_S2C::kServeridFieldNumber;
const int UserLogon_S2C::kLogonKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserLogon_S2C::UserLogon_S2C()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_UserBase_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:UserLogon_S2C)
}
UserLogon_S2C::UserLogon_S2C(const UserLogon_S2C& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.account().size() > 0) {
    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  logon_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.logon_key().size() > 0) {
    logon_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.logon_key_);
  }
  ::memcpy(&user_id_, &from.user_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&serverid_) -
    reinterpret_cast<char*>(&user_id_)) + sizeof(serverid_));
  // @@protoc_insertion_point(copy_constructor:UserLogon_S2C)
}

void UserLogon_S2C::SharedCtor() {
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  logon_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&serverid_) -
      reinterpret_cast<char*>(&user_id_)) + sizeof(serverid_));
  _cached_size_ = 0;
}

UserLogon_S2C::~UserLogon_S2C() {
  // @@protoc_insertion_point(destructor:UserLogon_S2C)
  SharedDtor();
}

void UserLogon_S2C::SharedDtor() {
  account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  logon_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UserLogon_S2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserLogon_S2C::descriptor() {
  protobuf_UserBase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_UserBase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserLogon_S2C& UserLogon_S2C::default_instance() {
  protobuf_UserBase_2eproto::InitDefaults();
  return *internal_default_instance();
}

UserLogon_S2C* UserLogon_S2C::New(::google::protobuf::Arena* arena) const {
  UserLogon_S2C* n = new UserLogon_S2C;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UserLogon_S2C::Clear() {
// @@protoc_insertion_point(message_clear_start:UserLogon_S2C)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  logon_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&serverid_) -
      reinterpret_cast<char*>(&user_id_)) + sizeof(serverid_));
  _internal_metadata_.Clear();
}

bool UserLogon_S2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UserLogon_S2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .UserErrCode errcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_errcode(static_cast< ::UserErrCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 user_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string account = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->account().data(), static_cast<int>(this->account().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "UserLogon_S2C.account"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 platfrom = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &platfrom_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 serverid = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &serverid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string logon_key = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_logon_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->logon_key().data(), static_cast<int>(this->logon_key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "UserLogon_S2C.logon_key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UserLogon_S2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UserLogon_S2C)
  return false;
#undef DO_
}

void UserLogon_S2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UserLogon_S2C)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .UserErrCode errcode = 1;
  if (this->errcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->errcode(), output);
  }

  // uint64 user_id = 2;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->user_id(), output);
  }

  // string account = 3;
  if (this->account().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account().data(), static_cast<int>(this->account().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "UserLogon_S2C.account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->account(), output);
  }

  // uint32 platfrom = 4;
  if (this->platfrom() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->platfrom(), output);
  }

  // uint32 serverid = 5;
  if (this->serverid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->serverid(), output);
  }

  // string logon_key = 6;
  if (this->logon_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->logon_key().data(), static_cast<int>(this->logon_key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "UserLogon_S2C.logon_key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->logon_key(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:UserLogon_S2C)
}

::google::protobuf::uint8* UserLogon_S2C::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UserLogon_S2C)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .UserErrCode errcode = 1;
  if (this->errcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->errcode(), target);
  }

  // uint64 user_id = 2;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->user_id(), target);
  }

  // string account = 3;
  if (this->account().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account().data(), static_cast<int>(this->account().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "UserLogon_S2C.account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->account(), target);
  }

  // uint32 platfrom = 4;
  if (this->platfrom() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->platfrom(), target);
  }

  // uint32 serverid = 5;
  if (this->serverid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->serverid(), target);
  }

  // string logon_key = 6;
  if (this->logon_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->logon_key().data(), static_cast<int>(this->logon_key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "UserLogon_S2C.logon_key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->logon_key(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UserLogon_S2C)
  return target;
}

size_t UserLogon_S2C::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UserLogon_S2C)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string account = 3;
  if (this->account().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->account());
  }

  // string logon_key = 6;
  if (this->logon_key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->logon_key());
  }

  // uint64 user_id = 2;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->user_id());
  }

  // .UserErrCode errcode = 1;
  if (this->errcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->errcode());
  }

  // uint32 platfrom = 4;
  if (this->platfrom() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->platfrom());
  }

  // uint32 serverid = 5;
  if (this->serverid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->serverid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserLogon_S2C::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UserLogon_S2C)
  GOOGLE_DCHECK_NE(&from, this);
  const UserLogon_S2C* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserLogon_S2C>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UserLogon_S2C)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UserLogon_S2C)
    MergeFrom(*source);
  }
}

void UserLogon_S2C::MergeFrom(const UserLogon_S2C& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UserLogon_S2C)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.account().size() > 0) {

    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  if (from.logon_key().size() > 0) {

    logon_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.logon_key_);
  }
  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
  if (from.errcode() != 0) {
    set_errcode(from.errcode());
  }
  if (from.platfrom() != 0) {
    set_platfrom(from.platfrom());
  }
  if (from.serverid() != 0) {
    set_serverid(from.serverid());
  }
}

void UserLogon_S2C::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UserLogon_S2C)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserLogon_S2C::CopyFrom(const UserLogon_S2C& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UserLogon_S2C)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserLogon_S2C::IsInitialized() const {
  return true;
}

void UserLogon_S2C::Swap(UserLogon_S2C* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserLogon_S2C::InternalSwap(UserLogon_S2C* other) {
  using std::swap;
  account_.Swap(&other->account_);
  logon_key_.Swap(&other->logon_key_);
  swap(user_id_, other->user_id_);
  swap(errcode_, other->errcode_);
  swap(platfrom_, other->platfrom_);
  swap(serverid_, other->serverid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UserLogon_S2C::GetMetadata() const {
  protobuf_UserBase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_UserBase_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UserLogon_S2C

// .UserErrCode errcode = 1;
void UserLogon_S2C::clear_errcode() {
  errcode_ = 0;
}
::UserErrCode UserLogon_S2C::errcode() const {
  // @@protoc_insertion_point(field_get:UserLogon_S2C.errcode)
  return static_cast< ::UserErrCode >(errcode_);
}
void UserLogon_S2C::set_errcode(::UserErrCode value) {
  
  errcode_ = value;
  // @@protoc_insertion_point(field_set:UserLogon_S2C.errcode)
}

// uint64 user_id = 2;
void UserLogon_S2C::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 UserLogon_S2C::user_id() const {
  // @@protoc_insertion_point(field_get:UserLogon_S2C.user_id)
  return user_id_;
}
void UserLogon_S2C::set_user_id(::google::protobuf::uint64 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:UserLogon_S2C.user_id)
}

// string account = 3;
void UserLogon_S2C::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UserLogon_S2C::account() const {
  // @@protoc_insertion_point(field_get:UserLogon_S2C.account)
  return account_.GetNoArena();
}
void UserLogon_S2C::set_account(const ::std::string& value) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:UserLogon_S2C.account)
}
#if LANG_CXX11
void UserLogon_S2C::set_account(::std::string&& value) {
  
  account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:UserLogon_S2C.account)
}
#endif
void UserLogon_S2C::set_account(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:UserLogon_S2C.account)
}
void UserLogon_S2C::set_account(const char* value, size_t size) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:UserLogon_S2C.account)
}
::std::string* UserLogon_S2C::mutable_account() {
  
  // @@protoc_insertion_point(field_mutable:UserLogon_S2C.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UserLogon_S2C::release_account() {
  // @@protoc_insertion_point(field_release:UserLogon_S2C.account)
  
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UserLogon_S2C::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    
  } else {
    
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:UserLogon_S2C.account)
}

// uint32 platfrom = 4;
void UserLogon_S2C::clear_platfrom() {
  platfrom_ = 0u;
}
::google::protobuf::uint32 UserLogon_S2C::platfrom() const {
  // @@protoc_insertion_point(field_get:UserLogon_S2C.platfrom)
  return platfrom_;
}
void UserLogon_S2C::set_platfrom(::google::protobuf::uint32 value) {
  
  platfrom_ = value;
  // @@protoc_insertion_point(field_set:UserLogon_S2C.platfrom)
}

// uint32 serverid = 5;
void UserLogon_S2C::clear_serverid() {
  serverid_ = 0u;
}
::google::protobuf::uint32 UserLogon_S2C::serverid() const {
  // @@protoc_insertion_point(field_get:UserLogon_S2C.serverid)
  return serverid_;
}
void UserLogon_S2C::set_serverid(::google::protobuf::uint32 value) {
  
  serverid_ = value;
  // @@protoc_insertion_point(field_set:UserLogon_S2C.serverid)
}

// string logon_key = 6;
void UserLogon_S2C::clear_logon_key() {
  logon_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UserLogon_S2C::logon_key() const {
  // @@protoc_insertion_point(field_get:UserLogon_S2C.logon_key)
  return logon_key_.GetNoArena();
}
void UserLogon_S2C::set_logon_key(const ::std::string& value) {
  
  logon_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:UserLogon_S2C.logon_key)
}
#if LANG_CXX11
void UserLogon_S2C::set_logon_key(::std::string&& value) {
  
  logon_key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:UserLogon_S2C.logon_key)
}
#endif
void UserLogon_S2C::set_logon_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  logon_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:UserLogon_S2C.logon_key)
}
void UserLogon_S2C::set_logon_key(const char* value, size_t size) {
  
  logon_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:UserLogon_S2C.logon_key)
}
::std::string* UserLogon_S2C::mutable_logon_key() {
  
  // @@protoc_insertion_point(field_mutable:UserLogon_S2C.logon_key)
  return logon_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UserLogon_S2C::release_logon_key() {
  // @@protoc_insertion_point(field_release:UserLogon_S2C.logon_key)
  
  return logon_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UserLogon_S2C::set_allocated_logon_key(::std::string* logon_key) {
  if (logon_key != NULL) {
    
  } else {
    
  }
  logon_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), logon_key);
  // @@protoc_insertion_point(field_set_allocated:UserLogon_S2C.logon_key)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateRole_C2S::CreateRole_C2S()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_UserBase_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CreateRole_C2S)
}
CreateRole_C2S::CreateRole_C2S(const CreateRole_C2S& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CreateRole_C2S)
}

void CreateRole_C2S::SharedCtor() {
  _cached_size_ = 0;
}

CreateRole_C2S::~CreateRole_C2S() {
  // @@protoc_insertion_point(destructor:CreateRole_C2S)
  SharedDtor();
}

void CreateRole_C2S::SharedDtor() {
}

void CreateRole_C2S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateRole_C2S::descriptor() {
  protobuf_UserBase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_UserBase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateRole_C2S& CreateRole_C2S::default_instance() {
  protobuf_UserBase_2eproto::InitDefaults();
  return *internal_default_instance();
}

CreateRole_C2S* CreateRole_C2S::New(::google::protobuf::Arena* arena) const {
  CreateRole_C2S* n = new CreateRole_C2S;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateRole_C2S::Clear() {
// @@protoc_insertion_point(message_clear_start:CreateRole_C2S)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool CreateRole_C2S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CreateRole_C2S)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:CreateRole_C2S)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CreateRole_C2S)
  return false;
#undef DO_
}

void CreateRole_C2S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CreateRole_C2S)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:CreateRole_C2S)
}

::google::protobuf::uint8* CreateRole_C2S::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CreateRole_C2S)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CreateRole_C2S)
  return target;
}

size_t CreateRole_C2S::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CreateRole_C2S)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateRole_C2S::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CreateRole_C2S)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateRole_C2S* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateRole_C2S>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CreateRole_C2S)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CreateRole_C2S)
    MergeFrom(*source);
  }
}

void CreateRole_C2S::MergeFrom(const CreateRole_C2S& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CreateRole_C2S)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CreateRole_C2S::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CreateRole_C2S)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateRole_C2S::CopyFrom(const CreateRole_C2S& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CreateRole_C2S)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateRole_C2S::IsInitialized() const {
  return true;
}

void CreateRole_C2S::Swap(CreateRole_C2S* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateRole_C2S::InternalSwap(CreateRole_C2S* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateRole_C2S::GetMetadata() const {
  protobuf_UserBase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_UserBase_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CreateRole_C2S

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateRole_S2C::CreateRole_S2C()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_UserBase_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:CreateRole_S2C)
}
CreateRole_S2C::CreateRole_S2C(const CreateRole_S2C& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:CreateRole_S2C)
}

void CreateRole_S2C::SharedCtor() {
  _cached_size_ = 0;
}

CreateRole_S2C::~CreateRole_S2C() {
  // @@protoc_insertion_point(destructor:CreateRole_S2C)
  SharedDtor();
}

void CreateRole_S2C::SharedDtor() {
}

void CreateRole_S2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateRole_S2C::descriptor() {
  protobuf_UserBase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_UserBase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateRole_S2C& CreateRole_S2C::default_instance() {
  protobuf_UserBase_2eproto::InitDefaults();
  return *internal_default_instance();
}

CreateRole_S2C* CreateRole_S2C::New(::google::protobuf::Arena* arena) const {
  CreateRole_S2C* n = new CreateRole_S2C;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateRole_S2C::Clear() {
// @@protoc_insertion_point(message_clear_start:CreateRole_S2C)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool CreateRole_S2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CreateRole_S2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:CreateRole_S2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CreateRole_S2C)
  return false;
#undef DO_
}

void CreateRole_S2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CreateRole_S2C)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:CreateRole_S2C)
}

::google::protobuf::uint8* CreateRole_S2C::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:CreateRole_S2C)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CreateRole_S2C)
  return target;
}

size_t CreateRole_S2C::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CreateRole_S2C)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateRole_S2C::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CreateRole_S2C)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateRole_S2C* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateRole_S2C>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CreateRole_S2C)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CreateRole_S2C)
    MergeFrom(*source);
  }
}

void CreateRole_S2C::MergeFrom(const CreateRole_S2C& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CreateRole_S2C)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CreateRole_S2C::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CreateRole_S2C)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateRole_S2C::CopyFrom(const CreateRole_S2C& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CreateRole_S2C)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateRole_S2C::IsInitialized() const {
  return true;
}

void CreateRole_S2C::Swap(CreateRole_S2C* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateRole_S2C::InternalSwap(CreateRole_S2C* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateRole_S2C::GetMetadata() const {
  protobuf_UserBase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_UserBase_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CreateRole_S2C

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
