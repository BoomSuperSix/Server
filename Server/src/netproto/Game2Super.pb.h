// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Game2Super.proto

#ifndef PROTOBUF_Game2Super_2eproto__INCLUDED
#define PROTOBUF_Game2Super_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace MPMsg {
class GameMsg_Wrapper;
class GameMsg_WrapperDefaultTypeInternal;
extern GameMsg_WrapperDefaultTypeInternal _GameMsg_Wrapper_default_instance_;
class StartMatchReq_Game2Match;
class StartMatchReq_Game2MatchDefaultTypeInternal;
extern StartMatchReq_Game2MatchDefaultTypeInternal _StartMatchReq_Game2Match_default_instance_;
class StartMatchRet_Super2Game;
class StartMatchRet_Super2GameDefaultTypeInternal;
extern StartMatchRet_Super2GameDefaultTypeInternal _StartMatchRet_Super2Game_default_instance_;
}  // namespace MPMsg

namespace MPMsg {

namespace protobuf_Game2Super_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_Game2Super_2eproto

// ===================================================================

class StartMatchReq_Game2Match : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MPMsg.StartMatchReq_Game2Match) */ {
 public:
  StartMatchReq_Game2Match();
  virtual ~StartMatchReq_Game2Match();

  StartMatchReq_Game2Match(const StartMatchReq_Game2Match& from);

  inline StartMatchReq_Game2Match& operator=(const StartMatchReq_Game2Match& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StartMatchReq_Game2Match(StartMatchReq_Game2Match&& from) noexcept
    : StartMatchReq_Game2Match() {
    *this = ::std::move(from);
  }

  inline StartMatchReq_Game2Match& operator=(StartMatchReq_Game2Match&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const StartMatchReq_Game2Match& default_instance();

  static inline const StartMatchReq_Game2Match* internal_default_instance() {
    return reinterpret_cast<const StartMatchReq_Game2Match*>(
               &_StartMatchReq_Game2Match_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(StartMatchReq_Game2Match* other);
  friend void swap(StartMatchReq_Game2Match& a, StartMatchReq_Game2Match& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StartMatchReq_Game2Match* New() const PROTOBUF_FINAL { return New(NULL); }

  StartMatchReq_Game2Match* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const StartMatchReq_Game2Match& from);
  void MergeFrom(const StartMatchReq_Game2Match& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(StartMatchReq_Game2Match* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 uid = 3;
  int uid_size() const;
  void clear_uid();
  static const int kUidFieldNumber = 3;
  ::google::protobuf::uint64 uid(int index) const;
  void set_uid(int index, ::google::protobuf::uint64 value);
  void add_uid(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      uid() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_uid();

  // uint32 plat_id = 1;
  void clear_plat_id();
  static const int kPlatIdFieldNumber = 1;
  ::google::protobuf::uint32 plat_id() const;
  void set_plat_id(::google::protobuf::uint32 value);

  // uint32 server_id = 2;
  void clear_server_id();
  static const int kServerIdFieldNumber = 2;
  ::google::protobuf::uint32 server_id() const;
  void set_server_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:MPMsg.StartMatchReq_Game2Match)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > uid_;
  mutable int _uid_cached_byte_size_;
  ::google::protobuf::uint32 plat_id_;
  ::google::protobuf::uint32 server_id_;
  mutable int _cached_size_;
  friend struct protobuf_Game2Super_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StartMatchRet_Super2Game : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MPMsg.StartMatchRet_Super2Game) */ {
 public:
  StartMatchRet_Super2Game();
  virtual ~StartMatchRet_Super2Game();

  StartMatchRet_Super2Game(const StartMatchRet_Super2Game& from);

  inline StartMatchRet_Super2Game& operator=(const StartMatchRet_Super2Game& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StartMatchRet_Super2Game(StartMatchRet_Super2Game&& from) noexcept
    : StartMatchRet_Super2Game() {
    *this = ::std::move(from);
  }

  inline StartMatchRet_Super2Game& operator=(StartMatchRet_Super2Game&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const StartMatchRet_Super2Game& default_instance();

  static inline const StartMatchRet_Super2Game* internal_default_instance() {
    return reinterpret_cast<const StartMatchRet_Super2Game*>(
               &_StartMatchRet_Super2Game_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(StartMatchRet_Super2Game* other);
  friend void swap(StartMatchRet_Super2Game& a, StartMatchRet_Super2Game& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StartMatchRet_Super2Game* New() const PROTOBUF_FINAL { return New(NULL); }

  StartMatchRet_Super2Game* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const StartMatchRet_Super2Game& from);
  void MergeFrom(const StartMatchRet_Super2Game& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(StartMatchRet_Super2Game* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 uid = 4;
  int uid_size() const;
  void clear_uid();
  static const int kUidFieldNumber = 4;
  ::google::protobuf::uint64 uid(int index) const;
  void set_uid(int index, ::google::protobuf::uint64 value);
  void add_uid(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      uid() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_uid();

  // uint32 err_code = 1;
  void clear_err_code();
  static const int kErrCodeFieldNumber = 1;
  ::google::protobuf::uint32 err_code() const;
  void set_err_code(::google::protobuf::uint32 value);

  // uint32 plat_id = 2;
  void clear_plat_id();
  static const int kPlatIdFieldNumber = 2;
  ::google::protobuf::uint32 plat_id() const;
  void set_plat_id(::google::protobuf::uint32 value);

  // uint32 server_id = 3;
  void clear_server_id();
  static const int kServerIdFieldNumber = 3;
  ::google::protobuf::uint32 server_id() const;
  void set_server_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:MPMsg.StartMatchRet_Super2Game)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > uid_;
  mutable int _uid_cached_byte_size_;
  ::google::protobuf::uint32 err_code_;
  ::google::protobuf::uint32 plat_id_;
  ::google::protobuf::uint32 server_id_;
  mutable int _cached_size_;
  friend struct protobuf_Game2Super_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GameMsg_Wrapper : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MPMsg.GameMsg_Wrapper) */ {
 public:
  GameMsg_Wrapper();
  virtual ~GameMsg_Wrapper();

  GameMsg_Wrapper(const GameMsg_Wrapper& from);

  inline GameMsg_Wrapper& operator=(const GameMsg_Wrapper& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GameMsg_Wrapper(GameMsg_Wrapper&& from) noexcept
    : GameMsg_Wrapper() {
    *this = ::std::move(from);
  }

  inline GameMsg_Wrapper& operator=(GameMsg_Wrapper&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GameMsg_Wrapper& default_instance();

  static inline const GameMsg_Wrapper* internal_default_instance() {
    return reinterpret_cast<const GameMsg_Wrapper*>(
               &_GameMsg_Wrapper_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(GameMsg_Wrapper* other);
  friend void swap(GameMsg_Wrapper& a, GameMsg_Wrapper& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GameMsg_Wrapper* New() const PROTOBUF_FINAL { return New(NULL); }

  GameMsg_Wrapper* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GameMsg_Wrapper& from);
  void MergeFrom(const GameMsg_Wrapper& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GameMsg_Wrapper* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes data = 8;
  void clear_data();
  static const int kDataFieldNumber = 8;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // uint32 platfrom_id_from = 1;
  void clear_platfrom_id_from();
  static const int kPlatfromIdFromFieldNumber = 1;
  ::google::protobuf::uint32 platfrom_id_from() const;
  void set_platfrom_id_from(::google::protobuf::uint32 value);

  // uint32 server_type_from = 2;
  void clear_server_type_from();
  static const int kServerTypeFromFieldNumber = 2;
  ::google::protobuf::uint32 server_type_from() const;
  void set_server_type_from(::google::protobuf::uint32 value);

  // uint32 server_id_from = 3;
  void clear_server_id_from();
  static const int kServerIdFromFieldNumber = 3;
  ::google::protobuf::uint32 server_id_from() const;
  void set_server_id_from(::google::protobuf::uint32 value);

  // uint32 platfrom_id_to = 4;
  void clear_platfrom_id_to();
  static const int kPlatfromIdToFieldNumber = 4;
  ::google::protobuf::uint32 platfrom_id_to() const;
  void set_platfrom_id_to(::google::protobuf::uint32 value);

  // uint32 server_type_to = 5;
  void clear_server_type_to();
  static const int kServerTypeToFieldNumber = 5;
  ::google::protobuf::uint32 server_type_to() const;
  void set_server_type_to(::google::protobuf::uint32 value);

  // uint32 server_id_to = 6;
  void clear_server_id_to();
  static const int kServerIdToFieldNumber = 6;
  ::google::protobuf::uint32 server_id_to() const;
  void set_server_id_to(::google::protobuf::uint32 value);

  // uint32 msg_id = 7;
  void clear_msg_id();
  static const int kMsgIdFieldNumber = 7;
  ::google::protobuf::uint32 msg_id() const;
  void set_msg_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:MPMsg.GameMsg_Wrapper)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  ::google::protobuf::uint32 platfrom_id_from_;
  ::google::protobuf::uint32 server_type_from_;
  ::google::protobuf::uint32 server_id_from_;
  ::google::protobuf::uint32 platfrom_id_to_;
  ::google::protobuf::uint32 server_type_to_;
  ::google::protobuf::uint32 server_id_to_;
  ::google::protobuf::uint32 msg_id_;
  mutable int _cached_size_;
  friend struct protobuf_Game2Super_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// StartMatchReq_Game2Match

// uint32 plat_id = 1;
inline void StartMatchReq_Game2Match::clear_plat_id() {
  plat_id_ = 0u;
}
inline ::google::protobuf::uint32 StartMatchReq_Game2Match::plat_id() const {
  // @@protoc_insertion_point(field_get:MPMsg.StartMatchReq_Game2Match.plat_id)
  return plat_id_;
}
inline void StartMatchReq_Game2Match::set_plat_id(::google::protobuf::uint32 value) {
  
  plat_id_ = value;
  // @@protoc_insertion_point(field_set:MPMsg.StartMatchReq_Game2Match.plat_id)
}

// uint32 server_id = 2;
inline void StartMatchReq_Game2Match::clear_server_id() {
  server_id_ = 0u;
}
inline ::google::protobuf::uint32 StartMatchReq_Game2Match::server_id() const {
  // @@protoc_insertion_point(field_get:MPMsg.StartMatchReq_Game2Match.server_id)
  return server_id_;
}
inline void StartMatchReq_Game2Match::set_server_id(::google::protobuf::uint32 value) {
  
  server_id_ = value;
  // @@protoc_insertion_point(field_set:MPMsg.StartMatchReq_Game2Match.server_id)
}

// repeated uint64 uid = 3;
inline int StartMatchReq_Game2Match::uid_size() const {
  return uid_.size();
}
inline void StartMatchReq_Game2Match::clear_uid() {
  uid_.Clear();
}
inline ::google::protobuf::uint64 StartMatchReq_Game2Match::uid(int index) const {
  // @@protoc_insertion_point(field_get:MPMsg.StartMatchReq_Game2Match.uid)
  return uid_.Get(index);
}
inline void StartMatchReq_Game2Match::set_uid(int index, ::google::protobuf::uint64 value) {
  uid_.Set(index, value);
  // @@protoc_insertion_point(field_set:MPMsg.StartMatchReq_Game2Match.uid)
}
inline void StartMatchReq_Game2Match::add_uid(::google::protobuf::uint64 value) {
  uid_.Add(value);
  // @@protoc_insertion_point(field_add:MPMsg.StartMatchReq_Game2Match.uid)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
StartMatchReq_Game2Match::uid() const {
  // @@protoc_insertion_point(field_list:MPMsg.StartMatchReq_Game2Match.uid)
  return uid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
StartMatchReq_Game2Match::mutable_uid() {
  // @@protoc_insertion_point(field_mutable_list:MPMsg.StartMatchReq_Game2Match.uid)
  return &uid_;
}

// -------------------------------------------------------------------

// StartMatchRet_Super2Game

// uint32 err_code = 1;
inline void StartMatchRet_Super2Game::clear_err_code() {
  err_code_ = 0u;
}
inline ::google::protobuf::uint32 StartMatchRet_Super2Game::err_code() const {
  // @@protoc_insertion_point(field_get:MPMsg.StartMatchRet_Super2Game.err_code)
  return err_code_;
}
inline void StartMatchRet_Super2Game::set_err_code(::google::protobuf::uint32 value) {
  
  err_code_ = value;
  // @@protoc_insertion_point(field_set:MPMsg.StartMatchRet_Super2Game.err_code)
}

// uint32 plat_id = 2;
inline void StartMatchRet_Super2Game::clear_plat_id() {
  plat_id_ = 0u;
}
inline ::google::protobuf::uint32 StartMatchRet_Super2Game::plat_id() const {
  // @@protoc_insertion_point(field_get:MPMsg.StartMatchRet_Super2Game.plat_id)
  return plat_id_;
}
inline void StartMatchRet_Super2Game::set_plat_id(::google::protobuf::uint32 value) {
  
  plat_id_ = value;
  // @@protoc_insertion_point(field_set:MPMsg.StartMatchRet_Super2Game.plat_id)
}

// uint32 server_id = 3;
inline void StartMatchRet_Super2Game::clear_server_id() {
  server_id_ = 0u;
}
inline ::google::protobuf::uint32 StartMatchRet_Super2Game::server_id() const {
  // @@protoc_insertion_point(field_get:MPMsg.StartMatchRet_Super2Game.server_id)
  return server_id_;
}
inline void StartMatchRet_Super2Game::set_server_id(::google::protobuf::uint32 value) {
  
  server_id_ = value;
  // @@protoc_insertion_point(field_set:MPMsg.StartMatchRet_Super2Game.server_id)
}

// repeated uint64 uid = 4;
inline int StartMatchRet_Super2Game::uid_size() const {
  return uid_.size();
}
inline void StartMatchRet_Super2Game::clear_uid() {
  uid_.Clear();
}
inline ::google::protobuf::uint64 StartMatchRet_Super2Game::uid(int index) const {
  // @@protoc_insertion_point(field_get:MPMsg.StartMatchRet_Super2Game.uid)
  return uid_.Get(index);
}
inline void StartMatchRet_Super2Game::set_uid(int index, ::google::protobuf::uint64 value) {
  uid_.Set(index, value);
  // @@protoc_insertion_point(field_set:MPMsg.StartMatchRet_Super2Game.uid)
}
inline void StartMatchRet_Super2Game::add_uid(::google::protobuf::uint64 value) {
  uid_.Add(value);
  // @@protoc_insertion_point(field_add:MPMsg.StartMatchRet_Super2Game.uid)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
StartMatchRet_Super2Game::uid() const {
  // @@protoc_insertion_point(field_list:MPMsg.StartMatchRet_Super2Game.uid)
  return uid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
StartMatchRet_Super2Game::mutable_uid() {
  // @@protoc_insertion_point(field_mutable_list:MPMsg.StartMatchRet_Super2Game.uid)
  return &uid_;
}

// -------------------------------------------------------------------

// GameMsg_Wrapper

// uint32 platfrom_id_from = 1;
inline void GameMsg_Wrapper::clear_platfrom_id_from() {
  platfrom_id_from_ = 0u;
}
inline ::google::protobuf::uint32 GameMsg_Wrapper::platfrom_id_from() const {
  // @@protoc_insertion_point(field_get:MPMsg.GameMsg_Wrapper.platfrom_id_from)
  return platfrom_id_from_;
}
inline void GameMsg_Wrapper::set_platfrom_id_from(::google::protobuf::uint32 value) {
  
  platfrom_id_from_ = value;
  // @@protoc_insertion_point(field_set:MPMsg.GameMsg_Wrapper.platfrom_id_from)
}

// uint32 server_type_from = 2;
inline void GameMsg_Wrapper::clear_server_type_from() {
  server_type_from_ = 0u;
}
inline ::google::protobuf::uint32 GameMsg_Wrapper::server_type_from() const {
  // @@protoc_insertion_point(field_get:MPMsg.GameMsg_Wrapper.server_type_from)
  return server_type_from_;
}
inline void GameMsg_Wrapper::set_server_type_from(::google::protobuf::uint32 value) {
  
  server_type_from_ = value;
  // @@protoc_insertion_point(field_set:MPMsg.GameMsg_Wrapper.server_type_from)
}

// uint32 server_id_from = 3;
inline void GameMsg_Wrapper::clear_server_id_from() {
  server_id_from_ = 0u;
}
inline ::google::protobuf::uint32 GameMsg_Wrapper::server_id_from() const {
  // @@protoc_insertion_point(field_get:MPMsg.GameMsg_Wrapper.server_id_from)
  return server_id_from_;
}
inline void GameMsg_Wrapper::set_server_id_from(::google::protobuf::uint32 value) {
  
  server_id_from_ = value;
  // @@protoc_insertion_point(field_set:MPMsg.GameMsg_Wrapper.server_id_from)
}

// uint32 platfrom_id_to = 4;
inline void GameMsg_Wrapper::clear_platfrom_id_to() {
  platfrom_id_to_ = 0u;
}
inline ::google::protobuf::uint32 GameMsg_Wrapper::platfrom_id_to() const {
  // @@protoc_insertion_point(field_get:MPMsg.GameMsg_Wrapper.platfrom_id_to)
  return platfrom_id_to_;
}
inline void GameMsg_Wrapper::set_platfrom_id_to(::google::protobuf::uint32 value) {
  
  platfrom_id_to_ = value;
  // @@protoc_insertion_point(field_set:MPMsg.GameMsg_Wrapper.platfrom_id_to)
}

// uint32 server_type_to = 5;
inline void GameMsg_Wrapper::clear_server_type_to() {
  server_type_to_ = 0u;
}
inline ::google::protobuf::uint32 GameMsg_Wrapper::server_type_to() const {
  // @@protoc_insertion_point(field_get:MPMsg.GameMsg_Wrapper.server_type_to)
  return server_type_to_;
}
inline void GameMsg_Wrapper::set_server_type_to(::google::protobuf::uint32 value) {
  
  server_type_to_ = value;
  // @@protoc_insertion_point(field_set:MPMsg.GameMsg_Wrapper.server_type_to)
}

// uint32 server_id_to = 6;
inline void GameMsg_Wrapper::clear_server_id_to() {
  server_id_to_ = 0u;
}
inline ::google::protobuf::uint32 GameMsg_Wrapper::server_id_to() const {
  // @@protoc_insertion_point(field_get:MPMsg.GameMsg_Wrapper.server_id_to)
  return server_id_to_;
}
inline void GameMsg_Wrapper::set_server_id_to(::google::protobuf::uint32 value) {
  
  server_id_to_ = value;
  // @@protoc_insertion_point(field_set:MPMsg.GameMsg_Wrapper.server_id_to)
}

// uint32 msg_id = 7;
inline void GameMsg_Wrapper::clear_msg_id() {
  msg_id_ = 0u;
}
inline ::google::protobuf::uint32 GameMsg_Wrapper::msg_id() const {
  // @@protoc_insertion_point(field_get:MPMsg.GameMsg_Wrapper.msg_id)
  return msg_id_;
}
inline void GameMsg_Wrapper::set_msg_id(::google::protobuf::uint32 value) {
  
  msg_id_ = value;
  // @@protoc_insertion_point(field_set:MPMsg.GameMsg_Wrapper.msg_id)
}

// bytes data = 8;
inline void GameMsg_Wrapper::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GameMsg_Wrapper::data() const {
  // @@protoc_insertion_point(field_get:MPMsg.GameMsg_Wrapper.data)
  return data_.GetNoArena();
}
inline void GameMsg_Wrapper::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MPMsg.GameMsg_Wrapper.data)
}
#if LANG_CXX11
inline void GameMsg_Wrapper::set_data(::std::string&& value) {
  
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:MPMsg.GameMsg_Wrapper.data)
}
#endif
inline void GameMsg_Wrapper::set_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MPMsg.GameMsg_Wrapper.data)
}
inline void GameMsg_Wrapper::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MPMsg.GameMsg_Wrapper.data)
}
inline ::std::string* GameMsg_Wrapper::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:MPMsg.GameMsg_Wrapper.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GameMsg_Wrapper::release_data() {
  // @@protoc_insertion_point(field_release:MPMsg.GameMsg_Wrapper.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GameMsg_Wrapper::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:MPMsg.GameMsg_Wrapper.data)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace MPMsg

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Game2Super_2eproto__INCLUDED
