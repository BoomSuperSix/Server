// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: test.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "test.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
class subtestDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<subtest>
     _instance;
} _subtest_default_instance_;
class test_HEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<test::test_HEntry>
     _instance;
} _test_HEntry_default_instance_;
class testDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<test>
     _instance;
} _test_default_instance_;
class wocaozhenniubiDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<wocaozhenniubi>
     _instance;
} _wocaozhenniubi_default_instance_;

namespace protobuf_test_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[4];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(subtest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(subtest, sa_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(test, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(test, a_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(test, b_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(test, c_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(test, d_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(test, e_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(test, f_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(test, g_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(test, h_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(test, i_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(wocaozhenniubi, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(wocaozhenniubi, s_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(subtest)},
  { 6, -1, sizeof(test)},
  { 20, -1, sizeof(wocaozhenniubi)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_subtest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_test_HEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_test_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_wocaozhenniubi_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "test.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
file_level_metadata[1].reflection = test::test_HEntry::CreateReflection(file_level_metadata[1].descriptor, _test_HEntry_default_instance_._instance.get_mutable());
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _subtest_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_subtest_default_instance_);_test_HEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_test_HEntry_default_instance_);_test_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_test_default_instance_);_wocaozhenniubi_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_wocaozhenniubi_default_instance_);_test_HEntry_default_instance_._instance.get_mutable()->set_default_instance(_test_HEntry_default_instance_._instance.get_mutable());
  _test_HEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _test_default_instance_._instance.get_mutable()->g_ = const_cast< ::subtest*>(
      ::subtest::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\ntest.proto\"\025\n\007subtest\022\n\n\002sa\030\001 \001(\005\"\253\001\n\004"
      "test\022\t\n\001a\030\001 \001(\005\022\t\n\001b\030\002 \001(\t\022\t\n\001c\030\003 \001(\r\022\t\n"
      "\001d\030\004 \001(\004\022\t\n\001e\030\005 \001(\001\022\t\n\001f\030\006 \003(\r\022\023\n\001g\030\007 \001("
      "\0132\010.subtest\022\027\n\001h\030\010 \003(\0132\014.test.HEntry\022\t\n\001"
      "i\030\t \001(\004\032(\n\006HEntry\022\013\n\003key\030\001 \001(\r\022\r\n\005value\030"
      "\002 \001(\r:\0028\001\"\033\n\016wocaozhenniubi\022\t\n\001s\030\001 \001(\tb\006"
      "proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 246);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "test.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_test_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int subtest::kSaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

subtest::subtest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_test_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:subtest)
}
subtest::subtest(const subtest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sa_ = from.sa_;
  // @@protoc_insertion_point(copy_constructor:subtest)
}

void subtest::SharedCtor() {
  sa_ = 0;
  _cached_size_ = 0;
}

subtest::~subtest() {
  // @@protoc_insertion_point(destructor:subtest)
  SharedDtor();
}

void subtest::SharedDtor() {
}

void subtest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* subtest::descriptor() {
  protobuf_test_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_test_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const subtest& subtest::default_instance() {
  protobuf_test_2eproto::InitDefaults();
  return *internal_default_instance();
}

subtest* subtest::New(::google::protobuf::Arena* arena) const {
  subtest* n = new subtest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void subtest::Clear() {
// @@protoc_insertion_point(message_clear_start:subtest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sa_ = 0;
  _internal_metadata_.Clear();
}

bool subtest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:subtest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 sa = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sa_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:subtest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:subtest)
  return false;
#undef DO_
}

void subtest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:subtest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 sa = 1;
  if (this->sa() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->sa(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:subtest)
}

::google::protobuf::uint8* subtest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:subtest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 sa = 1;
  if (this->sa() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->sa(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:subtest)
  return target;
}

size_t subtest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:subtest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 sa = 1;
  if (this->sa() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sa());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void subtest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:subtest)
  GOOGLE_DCHECK_NE(&from, this);
  const subtest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const subtest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:subtest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:subtest)
    MergeFrom(*source);
  }
}

void subtest::MergeFrom(const subtest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:subtest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.sa() != 0) {
    set_sa(from.sa());
  }
}

void subtest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:subtest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void subtest::CopyFrom(const subtest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:subtest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool subtest::IsInitialized() const {
  return true;
}

void subtest::Swap(subtest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void subtest::InternalSwap(subtest* other) {
  using std::swap;
  swap(sa_, other->sa_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata subtest::GetMetadata() const {
  protobuf_test_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_test_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// subtest

// int32 sa = 1;
void subtest::clear_sa() {
  sa_ = 0;
}
::google::protobuf::int32 subtest::sa() const {
  // @@protoc_insertion_point(field_get:subtest.sa)
  return sa_;
}
void subtest::set_sa(::google::protobuf::int32 value) {
  
  sa_ = value;
  // @@protoc_insertion_point(field_set:subtest.sa)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

test::test_HEntry::test_HEntry() {}
test::test_HEntry::test_HEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata test::test_HEntry::GetMetadata() const {
  protobuf_test_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_test_2eproto::file_level_metadata[1];
}
void test::test_HEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void test::test_HEntry::MergeFrom(const test_HEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int test::kAFieldNumber;
const int test::kBFieldNumber;
const int test::kCFieldNumber;
const int test::kDFieldNumber;
const int test::kEFieldNumber;
const int test::kFFieldNumber;
const int test::kGFieldNumber;
const int test::kHFieldNumber;
const int test::kIFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

test::test()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_test_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:test)
}
test::test(const test& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      f_(from.f_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  h_.MergeFrom(from.h_);
  b_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.b().size() > 0) {
    b_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.b_);
  }
  if (from.has_g()) {
    g_ = new ::subtest(*from.g_);
  } else {
    g_ = NULL;
  }
  ::memcpy(&a_, &from.a_,
    static_cast<size_t>(reinterpret_cast<char*>(&i_) -
    reinterpret_cast<char*>(&a_)) + sizeof(i_));
  // @@protoc_insertion_point(copy_constructor:test)
}

void test::SharedCtor() {
  b_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&g_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&i_) -
      reinterpret_cast<char*>(&g_)) + sizeof(i_));
  _cached_size_ = 0;
}

test::~test() {
  // @@protoc_insertion_point(destructor:test)
  SharedDtor();
}

void test::SharedDtor() {
  b_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete g_;
}

void test::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* test::descriptor() {
  protobuf_test_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_test_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const test& test::default_instance() {
  protobuf_test_2eproto::InitDefaults();
  return *internal_default_instance();
}

test* test::New(::google::protobuf::Arena* arena) const {
  test* n = new test;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void test::Clear() {
// @@protoc_insertion_point(message_clear_start:test)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  f_.Clear();
  h_.Clear();
  b_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && g_ != NULL) {
    delete g_;
  }
  g_ = NULL;
  ::memset(&a_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&i_) -
      reinterpret_cast<char*>(&a_)) + sizeof(i_));
  _internal_metadata_.Clear();
}

bool test::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:test)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 a = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &a_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string b = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_b()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->b().data(), static_cast<int>(this->b().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "test.b"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 c = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &c_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 d = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &d_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double e = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &e_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 f = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_f())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 50u, input, this->mutable_f())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .subtest g = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_g()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<uint32, uint32> h = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          test_HEntry::Parser< ::google::protobuf::internal::MapField<
              test_HEntry,
              ::google::protobuf::uint32, ::google::protobuf::uint32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 > > parser(&h_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 i = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &i_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:test)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:test)
  return false;
#undef DO_
}

void test::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:test)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 a = 1;
  if (this->a() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->a(), output);
  }

  // string b = 2;
  if (this->b().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->b().data(), static_cast<int>(this->b().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "test.b");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->b(), output);
  }

  // uint32 c = 3;
  if (this->c() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->c(), output);
  }

  // uint64 d = 4;
  if (this->d() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->d(), output);
  }

  // double e = 5;
  if (this->e() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->e(), output);
  }

  // repeated uint32 f = 6;
  if (this->f_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(6, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _f_cached_byte_size_));
  }
  for (int i = 0, n = this->f_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->f(i), output);
  }

  // .subtest g = 7;
  if (this->has_g()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->g_, output);
  }

  // map<uint32, uint32> h = 8;
  if (!this->h().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->h().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->h().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->h().begin();
          it != this->h().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<test_HEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(h_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            8, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<test_HEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->h().begin();
          it != this->h().end(); ++it) {
        entry.reset(h_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            8, *entry, output);
      }
    }
  }

  // uint64 i = 9;
  if (this->i() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(9, this->i(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:test)
}

::google::protobuf::uint8* test::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:test)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 a = 1;
  if (this->a() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->a(), target);
  }

  // string b = 2;
  if (this->b().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->b().data(), static_cast<int>(this->b().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "test.b");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->b(), target);
  }

  // uint32 c = 3;
  if (this->c() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->c(), target);
  }

  // uint64 d = 4;
  if (this->d() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->d(), target);
  }

  // double e = 5;
  if (this->e() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->e(), target);
  }

  // repeated uint32 f = 6;
  if (this->f_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      6,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _f_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->f_, target);
  }

  // .subtest g = 7;
  if (this->has_g()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *this->g_, deterministic, target);
  }

  // map<uint32, uint32> h = 8;
  if (!this->h().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->h().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->h().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->h().begin();
          it != this->h().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<test_HEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(h_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       8, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<test_HEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->h().begin();
          it != this->h().end(); ++it) {
        entry.reset(h_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       8, *entry, deterministic, target);
;
      }
    }
  }

  // uint64 i = 9;
  if (this->i() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(9, this->i(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:test)
  return target;
}

size_t test::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:test)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 f = 6;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->f_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _f_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // map<uint32, uint32> h = 8;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->h_size());
  {
    ::google::protobuf::scoped_ptr<test_HEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
        it = this->h().begin();
        it != this->h().end(); ++it) {
      entry.reset(h_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string b = 2;
  if (this->b().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->b());
  }

  // .subtest g = 7;
  if (this->has_g()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->g_);
  }

  // int32 a = 1;
  if (this->a() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->a());
  }

  // uint32 c = 3;
  if (this->c() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->c());
  }

  // uint64 d = 4;
  if (this->d() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->d());
  }

  // double e = 5;
  if (this->e() != 0) {
    total_size += 1 + 8;
  }

  // uint64 i = 9;
  if (this->i() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->i());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void test::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:test)
  GOOGLE_DCHECK_NE(&from, this);
  const test* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const test>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:test)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:test)
    MergeFrom(*source);
  }
}

void test::MergeFrom(const test& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:test)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  f_.MergeFrom(from.f_);
  h_.MergeFrom(from.h_);
  if (from.b().size() > 0) {

    b_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.b_);
  }
  if (from.has_g()) {
    mutable_g()->::subtest::MergeFrom(from.g());
  }
  if (from.a() != 0) {
    set_a(from.a());
  }
  if (from.c() != 0) {
    set_c(from.c());
  }
  if (from.d() != 0) {
    set_d(from.d());
  }
  if (from.e() != 0) {
    set_e(from.e());
  }
  if (from.i() != 0) {
    set_i(from.i());
  }
}

void test::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:test)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void test::CopyFrom(const test& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:test)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool test::IsInitialized() const {
  return true;
}

void test::Swap(test* other) {
  if (other == this) return;
  InternalSwap(other);
}
void test::InternalSwap(test* other) {
  using std::swap;
  f_.InternalSwap(&other->f_);
  h_.Swap(&other->h_);
  b_.Swap(&other->b_);
  swap(g_, other->g_);
  swap(a_, other->a_);
  swap(c_, other->c_);
  swap(d_, other->d_);
  swap(e_, other->e_);
  swap(i_, other->i_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata test::GetMetadata() const {
  protobuf_test_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_test_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// test

// int32 a = 1;
void test::clear_a() {
  a_ = 0;
}
::google::protobuf::int32 test::a() const {
  // @@protoc_insertion_point(field_get:test.a)
  return a_;
}
void test::set_a(::google::protobuf::int32 value) {
  
  a_ = value;
  // @@protoc_insertion_point(field_set:test.a)
}

// string b = 2;
void test::clear_b() {
  b_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& test::b() const {
  // @@protoc_insertion_point(field_get:test.b)
  return b_.GetNoArena();
}
void test::set_b(const ::std::string& value) {
  
  b_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:test.b)
}
#if LANG_CXX11
void test::set_b(::std::string&& value) {
  
  b_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:test.b)
}
#endif
void test::set_b(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  b_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:test.b)
}
void test::set_b(const char* value, size_t size) {
  
  b_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:test.b)
}
::std::string* test::mutable_b() {
  
  // @@protoc_insertion_point(field_mutable:test.b)
  return b_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* test::release_b() {
  // @@protoc_insertion_point(field_release:test.b)
  
  return b_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void test::set_allocated_b(::std::string* b) {
  if (b != NULL) {
    
  } else {
    
  }
  b_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), b);
  // @@protoc_insertion_point(field_set_allocated:test.b)
}

// uint32 c = 3;
void test::clear_c() {
  c_ = 0u;
}
::google::protobuf::uint32 test::c() const {
  // @@protoc_insertion_point(field_get:test.c)
  return c_;
}
void test::set_c(::google::protobuf::uint32 value) {
  
  c_ = value;
  // @@protoc_insertion_point(field_set:test.c)
}

// uint64 d = 4;
void test::clear_d() {
  d_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 test::d() const {
  // @@protoc_insertion_point(field_get:test.d)
  return d_;
}
void test::set_d(::google::protobuf::uint64 value) {
  
  d_ = value;
  // @@protoc_insertion_point(field_set:test.d)
}

// double e = 5;
void test::clear_e() {
  e_ = 0;
}
double test::e() const {
  // @@protoc_insertion_point(field_get:test.e)
  return e_;
}
void test::set_e(double value) {
  
  e_ = value;
  // @@protoc_insertion_point(field_set:test.e)
}

// repeated uint32 f = 6;
int test::f_size() const {
  return f_.size();
}
void test::clear_f() {
  f_.Clear();
}
::google::protobuf::uint32 test::f(int index) const {
  // @@protoc_insertion_point(field_get:test.f)
  return f_.Get(index);
}
void test::set_f(int index, ::google::protobuf::uint32 value) {
  f_.Set(index, value);
  // @@protoc_insertion_point(field_set:test.f)
}
void test::add_f(::google::protobuf::uint32 value) {
  f_.Add(value);
  // @@protoc_insertion_point(field_add:test.f)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
test::f() const {
  // @@protoc_insertion_point(field_list:test.f)
  return f_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
test::mutable_f() {
  // @@protoc_insertion_point(field_mutable_list:test.f)
  return &f_;
}

// .subtest g = 7;
bool test::has_g() const {
  return this != internal_default_instance() && g_ != NULL;
}
void test::clear_g() {
  if (GetArenaNoVirtual() == NULL && g_ != NULL) delete g_;
  g_ = NULL;
}
const ::subtest& test::g() const {
  const ::subtest* p = g_;
  // @@protoc_insertion_point(field_get:test.g)
  return p != NULL ? *p : *reinterpret_cast<const ::subtest*>(
      &::_subtest_default_instance_);
}
::subtest* test::mutable_g() {
  
  if (g_ == NULL) {
    g_ = new ::subtest;
  }
  // @@protoc_insertion_point(field_mutable:test.g)
  return g_;
}
::subtest* test::release_g() {
  // @@protoc_insertion_point(field_release:test.g)
  
  ::subtest* temp = g_;
  g_ = NULL;
  return temp;
}
void test::set_allocated_g(::subtest* g) {
  delete g_;
  g_ = g;
  if (g) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:test.g)
}

// map<uint32, uint32> h = 8;
int test::h_size() const {
  return h_.size();
}
void test::clear_h() {
  h_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
test::h() const {
  // @@protoc_insertion_point(field_map:test.h)
  return h_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
test::mutable_h() {
  // @@protoc_insertion_point(field_mutable_map:test.h)
  return h_.MutableMap();
}

// uint64 i = 9;
void test::clear_i() {
  i_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 test::i() const {
  // @@protoc_insertion_point(field_get:test.i)
  return i_;
}
void test::set_i(::google::protobuf::uint64 value) {
  
  i_ = value;
  // @@protoc_insertion_point(field_set:test.i)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int wocaozhenniubi::kSFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

wocaozhenniubi::wocaozhenniubi()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_test_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:wocaozhenniubi)
}
wocaozhenniubi::wocaozhenniubi(const wocaozhenniubi& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  s_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.s().size() > 0) {
    s_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.s_);
  }
  // @@protoc_insertion_point(copy_constructor:wocaozhenniubi)
}

void wocaozhenniubi::SharedCtor() {
  s_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

wocaozhenniubi::~wocaozhenniubi() {
  // @@protoc_insertion_point(destructor:wocaozhenniubi)
  SharedDtor();
}

void wocaozhenniubi::SharedDtor() {
  s_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void wocaozhenniubi::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* wocaozhenniubi::descriptor() {
  protobuf_test_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_test_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const wocaozhenniubi& wocaozhenniubi::default_instance() {
  protobuf_test_2eproto::InitDefaults();
  return *internal_default_instance();
}

wocaozhenniubi* wocaozhenniubi::New(::google::protobuf::Arena* arena) const {
  wocaozhenniubi* n = new wocaozhenniubi;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void wocaozhenniubi::Clear() {
// @@protoc_insertion_point(message_clear_start:wocaozhenniubi)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  s_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool wocaozhenniubi::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:wocaozhenniubi)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string s = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_s()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->s().data(), static_cast<int>(this->s().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "wocaozhenniubi.s"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:wocaozhenniubi)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:wocaozhenniubi)
  return false;
#undef DO_
}

void wocaozhenniubi::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:wocaozhenniubi)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string s = 1;
  if (this->s().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->s().data(), static_cast<int>(this->s().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "wocaozhenniubi.s");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->s(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:wocaozhenniubi)
}

::google::protobuf::uint8* wocaozhenniubi::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:wocaozhenniubi)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string s = 1;
  if (this->s().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->s().data(), static_cast<int>(this->s().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "wocaozhenniubi.s");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->s(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:wocaozhenniubi)
  return target;
}

size_t wocaozhenniubi::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:wocaozhenniubi)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string s = 1;
  if (this->s().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->s());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void wocaozhenniubi::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:wocaozhenniubi)
  GOOGLE_DCHECK_NE(&from, this);
  const wocaozhenniubi* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const wocaozhenniubi>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:wocaozhenniubi)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:wocaozhenniubi)
    MergeFrom(*source);
  }
}

void wocaozhenniubi::MergeFrom(const wocaozhenniubi& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:wocaozhenniubi)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.s().size() > 0) {

    s_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.s_);
  }
}

void wocaozhenniubi::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:wocaozhenniubi)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void wocaozhenniubi::CopyFrom(const wocaozhenniubi& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:wocaozhenniubi)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool wocaozhenniubi::IsInitialized() const {
  return true;
}

void wocaozhenniubi::Swap(wocaozhenniubi* other) {
  if (other == this) return;
  InternalSwap(other);
}
void wocaozhenniubi::InternalSwap(wocaozhenniubi* other) {
  using std::swap;
  s_.Swap(&other->s_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata wocaozhenniubi::GetMetadata() const {
  protobuf_test_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_test_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// wocaozhenniubi

// string s = 1;
void wocaozhenniubi::clear_s() {
  s_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& wocaozhenniubi::s() const {
  // @@protoc_insertion_point(field_get:wocaozhenniubi.s)
  return s_.GetNoArena();
}
void wocaozhenniubi::set_s(const ::std::string& value) {
  
  s_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:wocaozhenniubi.s)
}
#if LANG_CXX11
void wocaozhenniubi::set_s(::std::string&& value) {
  
  s_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:wocaozhenniubi.s)
}
#endif
void wocaozhenniubi::set_s(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  s_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:wocaozhenniubi.s)
}
void wocaozhenniubi::set_s(const char* value, size_t size) {
  
  s_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:wocaozhenniubi.s)
}
::std::string* wocaozhenniubi::mutable_s() {
  
  // @@protoc_insertion_point(field_mutable:wocaozhenniubi.s)
  return s_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* wocaozhenniubi::release_s() {
  // @@protoc_insertion_point(field_release:wocaozhenniubi.s)
  
  return s_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void wocaozhenniubi::set_allocated_s(::std::string* s) {
  if (s != NULL) {
    
  } else {
    
  }
  s_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), s);
  // @@protoc_insertion_point(field_set_allocated:wocaozhenniubi.s)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
