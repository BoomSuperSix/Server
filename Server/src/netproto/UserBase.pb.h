// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: UserBase.proto

#ifndef PROTOBUF_UserBase_2eproto__INCLUDED
#define PROTOBUF_UserBase_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "UserErrCode.pb.h"
// @@protoc_insertion_point(includes)
class CreateRole_C2S;
class CreateRole_C2SDefaultTypeInternal;
extern CreateRole_C2SDefaultTypeInternal _CreateRole_C2S_default_instance_;
class CreateRole_S2C;
class CreateRole_S2CDefaultTypeInternal;
extern CreateRole_S2CDefaultTypeInternal _CreateRole_S2C_default_instance_;
class UserLogon_C2S;
class UserLogon_C2SDefaultTypeInternal;
extern UserLogon_C2SDefaultTypeInternal _UserLogon_C2S_default_instance_;
class UserLogon_S2C;
class UserLogon_S2CDefaultTypeInternal;
extern UserLogon_S2CDefaultTypeInternal _UserLogon_S2C_default_instance_;

namespace protobuf_UserBase_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_UserBase_2eproto

// ===================================================================

class UserLogon_C2S : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:UserLogon_C2S) */ {
 public:
  UserLogon_C2S();
  virtual ~UserLogon_C2S();

  UserLogon_C2S(const UserLogon_C2S& from);

  inline UserLogon_C2S& operator=(const UserLogon_C2S& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UserLogon_C2S(UserLogon_C2S&& from) noexcept
    : UserLogon_C2S() {
    *this = ::std::move(from);
  }

  inline UserLogon_C2S& operator=(UserLogon_C2S&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UserLogon_C2S& default_instance();

  static inline const UserLogon_C2S* internal_default_instance() {
    return reinterpret_cast<const UserLogon_C2S*>(
               &_UserLogon_C2S_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(UserLogon_C2S* other);
  friend void swap(UserLogon_C2S& a, UserLogon_C2S& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UserLogon_C2S* New() const PROTOBUF_FINAL { return New(NULL); }

  UserLogon_C2S* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UserLogon_C2S& from);
  void MergeFrom(const UserLogon_C2S& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UserLogon_C2S* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string account = 1;
  void clear_account();
  static const int kAccountFieldNumber = 1;
  const ::std::string& account() const;
  void set_account(const ::std::string& value);
  #if LANG_CXX11
  void set_account(::std::string&& value);
  #endif
  void set_account(const char* value);
  void set_account(const char* value, size_t size);
  ::std::string* mutable_account();
  ::std::string* release_account();
  void set_allocated_account(::std::string* account);

  // string password = 2;
  void clear_password();
  static const int kPasswordFieldNumber = 2;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  #if LANG_CXX11
  void set_password(::std::string&& value);
  #endif
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // string logon_key = 5;
  void clear_logon_key();
  static const int kLogonKeyFieldNumber = 5;
  const ::std::string& logon_key() const;
  void set_logon_key(const ::std::string& value);
  #if LANG_CXX11
  void set_logon_key(::std::string&& value);
  #endif
  void set_logon_key(const char* value);
  void set_logon_key(const char* value, size_t size);
  ::std::string* mutable_logon_key();
  ::std::string* release_logon_key();
  void set_allocated_logon_key(::std::string* logon_key);

  // uint32 platfrom = 3;
  void clear_platfrom();
  static const int kPlatfromFieldNumber = 3;
  ::google::protobuf::uint32 platfrom() const;
  void set_platfrom(::google::protobuf::uint32 value);

  // uint32 serverid = 4;
  void clear_serverid();
  static const int kServeridFieldNumber = 4;
  ::google::protobuf::uint32 serverid() const;
  void set_serverid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:UserLogon_C2S)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr account_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  ::google::protobuf::internal::ArenaStringPtr logon_key_;
  ::google::protobuf::uint32 platfrom_;
  ::google::protobuf::uint32 serverid_;
  mutable int _cached_size_;
  friend struct protobuf_UserBase_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UserLogon_S2C : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:UserLogon_S2C) */ {
 public:
  UserLogon_S2C();
  virtual ~UserLogon_S2C();

  UserLogon_S2C(const UserLogon_S2C& from);

  inline UserLogon_S2C& operator=(const UserLogon_S2C& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UserLogon_S2C(UserLogon_S2C&& from) noexcept
    : UserLogon_S2C() {
    *this = ::std::move(from);
  }

  inline UserLogon_S2C& operator=(UserLogon_S2C&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UserLogon_S2C& default_instance();

  static inline const UserLogon_S2C* internal_default_instance() {
    return reinterpret_cast<const UserLogon_S2C*>(
               &_UserLogon_S2C_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(UserLogon_S2C* other);
  friend void swap(UserLogon_S2C& a, UserLogon_S2C& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UserLogon_S2C* New() const PROTOBUF_FINAL { return New(NULL); }

  UserLogon_S2C* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UserLogon_S2C& from);
  void MergeFrom(const UserLogon_S2C& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UserLogon_S2C* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string account = 3;
  void clear_account();
  static const int kAccountFieldNumber = 3;
  const ::std::string& account() const;
  void set_account(const ::std::string& value);
  #if LANG_CXX11
  void set_account(::std::string&& value);
  #endif
  void set_account(const char* value);
  void set_account(const char* value, size_t size);
  ::std::string* mutable_account();
  ::std::string* release_account();
  void set_allocated_account(::std::string* account);

  // string logon_key = 6;
  void clear_logon_key();
  static const int kLogonKeyFieldNumber = 6;
  const ::std::string& logon_key() const;
  void set_logon_key(const ::std::string& value);
  #if LANG_CXX11
  void set_logon_key(::std::string&& value);
  #endif
  void set_logon_key(const char* value);
  void set_logon_key(const char* value, size_t size);
  ::std::string* mutable_logon_key();
  ::std::string* release_logon_key();
  void set_allocated_logon_key(::std::string* logon_key);

  // uint64 user_id = 2;
  void clear_user_id();
  static const int kUserIdFieldNumber = 2;
  ::google::protobuf::uint64 user_id() const;
  void set_user_id(::google::protobuf::uint64 value);

  // .UserErrCode errcode = 1;
  void clear_errcode();
  static const int kErrcodeFieldNumber = 1;
  ::UserErrCode errcode() const;
  void set_errcode(::UserErrCode value);

  // uint32 platfrom = 4;
  void clear_platfrom();
  static const int kPlatfromFieldNumber = 4;
  ::google::protobuf::uint32 platfrom() const;
  void set_platfrom(::google::protobuf::uint32 value);

  // uint32 serverid = 5;
  void clear_serverid();
  static const int kServeridFieldNumber = 5;
  ::google::protobuf::uint32 serverid() const;
  void set_serverid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:UserLogon_S2C)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr account_;
  ::google::protobuf::internal::ArenaStringPtr logon_key_;
  ::google::protobuf::uint64 user_id_;
  int errcode_;
  ::google::protobuf::uint32 platfrom_;
  ::google::protobuf::uint32 serverid_;
  mutable int _cached_size_;
  friend struct protobuf_UserBase_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CreateRole_C2S : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CreateRole_C2S) */ {
 public:
  CreateRole_C2S();
  virtual ~CreateRole_C2S();

  CreateRole_C2S(const CreateRole_C2S& from);

  inline CreateRole_C2S& operator=(const CreateRole_C2S& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateRole_C2S(CreateRole_C2S&& from) noexcept
    : CreateRole_C2S() {
    *this = ::std::move(from);
  }

  inline CreateRole_C2S& operator=(CreateRole_C2S&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateRole_C2S& default_instance();

  static inline const CreateRole_C2S* internal_default_instance() {
    return reinterpret_cast<const CreateRole_C2S*>(
               &_CreateRole_C2S_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(CreateRole_C2S* other);
  friend void swap(CreateRole_C2S& a, CreateRole_C2S& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateRole_C2S* New() const PROTOBUF_FINAL { return New(NULL); }

  CreateRole_C2S* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CreateRole_C2S& from);
  void MergeFrom(const CreateRole_C2S& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CreateRole_C2S* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CreateRole_C2S)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_UserBase_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CreateRole_S2C : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CreateRole_S2C) */ {
 public:
  CreateRole_S2C();
  virtual ~CreateRole_S2C();

  CreateRole_S2C(const CreateRole_S2C& from);

  inline CreateRole_S2C& operator=(const CreateRole_S2C& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateRole_S2C(CreateRole_S2C&& from) noexcept
    : CreateRole_S2C() {
    *this = ::std::move(from);
  }

  inline CreateRole_S2C& operator=(CreateRole_S2C&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateRole_S2C& default_instance();

  static inline const CreateRole_S2C* internal_default_instance() {
    return reinterpret_cast<const CreateRole_S2C*>(
               &_CreateRole_S2C_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(CreateRole_S2C* other);
  friend void swap(CreateRole_S2C& a, CreateRole_S2C& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateRole_S2C* New() const PROTOBUF_FINAL { return New(NULL); }

  CreateRole_S2C* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CreateRole_S2C& from);
  void MergeFrom(const CreateRole_S2C& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CreateRole_S2C* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CreateRole_S2C)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_UserBase_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// UserLogon_C2S

// string account = 1;
inline void UserLogon_C2S::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UserLogon_C2S::account() const {
  // @@protoc_insertion_point(field_get:UserLogon_C2S.account)
  return account_.GetNoArena();
}
inline void UserLogon_C2S::set_account(const ::std::string& value) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:UserLogon_C2S.account)
}
#if LANG_CXX11
inline void UserLogon_C2S::set_account(::std::string&& value) {
  
  account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:UserLogon_C2S.account)
}
#endif
inline void UserLogon_C2S::set_account(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:UserLogon_C2S.account)
}
inline void UserLogon_C2S::set_account(const char* value, size_t size) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:UserLogon_C2S.account)
}
inline ::std::string* UserLogon_C2S::mutable_account() {
  
  // @@protoc_insertion_point(field_mutable:UserLogon_C2S.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserLogon_C2S::release_account() {
  // @@protoc_insertion_point(field_release:UserLogon_C2S.account)
  
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserLogon_C2S::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    
  } else {
    
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:UserLogon_C2S.account)
}

// string password = 2;
inline void UserLogon_C2S::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UserLogon_C2S::password() const {
  // @@protoc_insertion_point(field_get:UserLogon_C2S.password)
  return password_.GetNoArena();
}
inline void UserLogon_C2S::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:UserLogon_C2S.password)
}
#if LANG_CXX11
inline void UserLogon_C2S::set_password(::std::string&& value) {
  
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:UserLogon_C2S.password)
}
#endif
inline void UserLogon_C2S::set_password(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:UserLogon_C2S.password)
}
inline void UserLogon_C2S::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:UserLogon_C2S.password)
}
inline ::std::string* UserLogon_C2S::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:UserLogon_C2S.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserLogon_C2S::release_password() {
  // @@protoc_insertion_point(field_release:UserLogon_C2S.password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserLogon_C2S::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:UserLogon_C2S.password)
}

// uint32 platfrom = 3;
inline void UserLogon_C2S::clear_platfrom() {
  platfrom_ = 0u;
}
inline ::google::protobuf::uint32 UserLogon_C2S::platfrom() const {
  // @@protoc_insertion_point(field_get:UserLogon_C2S.platfrom)
  return platfrom_;
}
inline void UserLogon_C2S::set_platfrom(::google::protobuf::uint32 value) {
  
  platfrom_ = value;
  // @@protoc_insertion_point(field_set:UserLogon_C2S.platfrom)
}

// uint32 serverid = 4;
inline void UserLogon_C2S::clear_serverid() {
  serverid_ = 0u;
}
inline ::google::protobuf::uint32 UserLogon_C2S::serverid() const {
  // @@protoc_insertion_point(field_get:UserLogon_C2S.serverid)
  return serverid_;
}
inline void UserLogon_C2S::set_serverid(::google::protobuf::uint32 value) {
  
  serverid_ = value;
  // @@protoc_insertion_point(field_set:UserLogon_C2S.serverid)
}

// string logon_key = 5;
inline void UserLogon_C2S::clear_logon_key() {
  logon_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UserLogon_C2S::logon_key() const {
  // @@protoc_insertion_point(field_get:UserLogon_C2S.logon_key)
  return logon_key_.GetNoArena();
}
inline void UserLogon_C2S::set_logon_key(const ::std::string& value) {
  
  logon_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:UserLogon_C2S.logon_key)
}
#if LANG_CXX11
inline void UserLogon_C2S::set_logon_key(::std::string&& value) {
  
  logon_key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:UserLogon_C2S.logon_key)
}
#endif
inline void UserLogon_C2S::set_logon_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  logon_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:UserLogon_C2S.logon_key)
}
inline void UserLogon_C2S::set_logon_key(const char* value, size_t size) {
  
  logon_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:UserLogon_C2S.logon_key)
}
inline ::std::string* UserLogon_C2S::mutable_logon_key() {
  
  // @@protoc_insertion_point(field_mutable:UserLogon_C2S.logon_key)
  return logon_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserLogon_C2S::release_logon_key() {
  // @@protoc_insertion_point(field_release:UserLogon_C2S.logon_key)
  
  return logon_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserLogon_C2S::set_allocated_logon_key(::std::string* logon_key) {
  if (logon_key != NULL) {
    
  } else {
    
  }
  logon_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), logon_key);
  // @@protoc_insertion_point(field_set_allocated:UserLogon_C2S.logon_key)
}

// -------------------------------------------------------------------

// UserLogon_S2C

// .UserErrCode errcode = 1;
inline void UserLogon_S2C::clear_errcode() {
  errcode_ = 0;
}
inline ::UserErrCode UserLogon_S2C::errcode() const {
  // @@protoc_insertion_point(field_get:UserLogon_S2C.errcode)
  return static_cast< ::UserErrCode >(errcode_);
}
inline void UserLogon_S2C::set_errcode(::UserErrCode value) {
  
  errcode_ = value;
  // @@protoc_insertion_point(field_set:UserLogon_S2C.errcode)
}

// uint64 user_id = 2;
inline void UserLogon_S2C::clear_user_id() {
  user_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 UserLogon_S2C::user_id() const {
  // @@protoc_insertion_point(field_get:UserLogon_S2C.user_id)
  return user_id_;
}
inline void UserLogon_S2C::set_user_id(::google::protobuf::uint64 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:UserLogon_S2C.user_id)
}

// string account = 3;
inline void UserLogon_S2C::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UserLogon_S2C::account() const {
  // @@protoc_insertion_point(field_get:UserLogon_S2C.account)
  return account_.GetNoArena();
}
inline void UserLogon_S2C::set_account(const ::std::string& value) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:UserLogon_S2C.account)
}
#if LANG_CXX11
inline void UserLogon_S2C::set_account(::std::string&& value) {
  
  account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:UserLogon_S2C.account)
}
#endif
inline void UserLogon_S2C::set_account(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:UserLogon_S2C.account)
}
inline void UserLogon_S2C::set_account(const char* value, size_t size) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:UserLogon_S2C.account)
}
inline ::std::string* UserLogon_S2C::mutable_account() {
  
  // @@protoc_insertion_point(field_mutable:UserLogon_S2C.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserLogon_S2C::release_account() {
  // @@protoc_insertion_point(field_release:UserLogon_S2C.account)
  
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserLogon_S2C::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    
  } else {
    
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:UserLogon_S2C.account)
}

// uint32 platfrom = 4;
inline void UserLogon_S2C::clear_platfrom() {
  platfrom_ = 0u;
}
inline ::google::protobuf::uint32 UserLogon_S2C::platfrom() const {
  // @@protoc_insertion_point(field_get:UserLogon_S2C.platfrom)
  return platfrom_;
}
inline void UserLogon_S2C::set_platfrom(::google::protobuf::uint32 value) {
  
  platfrom_ = value;
  // @@protoc_insertion_point(field_set:UserLogon_S2C.platfrom)
}

// uint32 serverid = 5;
inline void UserLogon_S2C::clear_serverid() {
  serverid_ = 0u;
}
inline ::google::protobuf::uint32 UserLogon_S2C::serverid() const {
  // @@protoc_insertion_point(field_get:UserLogon_S2C.serverid)
  return serverid_;
}
inline void UserLogon_S2C::set_serverid(::google::protobuf::uint32 value) {
  
  serverid_ = value;
  // @@protoc_insertion_point(field_set:UserLogon_S2C.serverid)
}

// string logon_key = 6;
inline void UserLogon_S2C::clear_logon_key() {
  logon_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UserLogon_S2C::logon_key() const {
  // @@protoc_insertion_point(field_get:UserLogon_S2C.logon_key)
  return logon_key_.GetNoArena();
}
inline void UserLogon_S2C::set_logon_key(const ::std::string& value) {
  
  logon_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:UserLogon_S2C.logon_key)
}
#if LANG_CXX11
inline void UserLogon_S2C::set_logon_key(::std::string&& value) {
  
  logon_key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:UserLogon_S2C.logon_key)
}
#endif
inline void UserLogon_S2C::set_logon_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  logon_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:UserLogon_S2C.logon_key)
}
inline void UserLogon_S2C::set_logon_key(const char* value, size_t size) {
  
  logon_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:UserLogon_S2C.logon_key)
}
inline ::std::string* UserLogon_S2C::mutable_logon_key() {
  
  // @@protoc_insertion_point(field_mutable:UserLogon_S2C.logon_key)
  return logon_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserLogon_S2C::release_logon_key() {
  // @@protoc_insertion_point(field_release:UserLogon_S2C.logon_key)
  
  return logon_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserLogon_S2C::set_allocated_logon_key(::std::string* logon_key) {
  if (logon_key != NULL) {
    
  } else {
    
  }
  logon_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), logon_key);
  // @@protoc_insertion_point(field_set_allocated:UserLogon_S2C.logon_key)
}

// -------------------------------------------------------------------

// CreateRole_C2S

// -------------------------------------------------------------------

// CreateRole_S2C

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_UserBase_2eproto__INCLUDED
