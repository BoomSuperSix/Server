// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: test.proto

#ifndef PROTOBUF_test_2eproto__INCLUDED
#define PROTOBUF_test_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
class subtest;
class subtestDefaultTypeInternal;
extern subtestDefaultTypeInternal _subtest_default_instance_;
class test;
class testDefaultTypeInternal;
extern testDefaultTypeInternal _test_default_instance_;
class test_HEntry;
class test_HEntryDefaultTypeInternal;
extern test_HEntryDefaultTypeInternal _test_HEntry_default_instance_;
class wocaozhenniubi;
class wocaozhenniubiDefaultTypeInternal;
extern wocaozhenniubiDefaultTypeInternal _wocaozhenniubi_default_instance_;

namespace protobuf_test_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_test_2eproto

// ===================================================================

class subtest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:subtest) */ {
 public:
  subtest();
  virtual ~subtest();

  subtest(const subtest& from);

  inline subtest& operator=(const subtest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  subtest(subtest&& from) noexcept
    : subtest() {
    *this = ::std::move(from);
  }

  inline subtest& operator=(subtest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const subtest& default_instance();

  static inline const subtest* internal_default_instance() {
    return reinterpret_cast<const subtest*>(
               &_subtest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(subtest* other);
  friend void swap(subtest& a, subtest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline subtest* New() const PROTOBUF_FINAL { return New(NULL); }

  subtest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const subtest& from);
  void MergeFrom(const subtest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(subtest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 sa = 1;
  void clear_sa();
  static const int kSaFieldNumber = 1;
  ::google::protobuf::int32 sa() const;
  void set_sa(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:subtest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 sa_;
  mutable int _cached_size_;
  friend struct protobuf_test_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class test : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:test) */ {
 public:
  test();
  virtual ~test();

  test(const test& from);

  inline test& operator=(const test& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  test(test&& from) noexcept
    : test() {
    *this = ::std::move(from);
  }

  inline test& operator=(test&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const test& default_instance();

  static inline const test* internal_default_instance() {
    return reinterpret_cast<const test*>(
               &_test_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(test* other);
  friend void swap(test& a, test& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline test* New() const PROTOBUF_FINAL { return New(NULL); }

  test* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const test& from);
  void MergeFrom(const test& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(test* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // repeated uint32 f = 6;
  int f_size() const;
  void clear_f();
  static const int kFFieldNumber = 6;
  ::google::protobuf::uint32 f(int index) const;
  void set_f(int index, ::google::protobuf::uint32 value);
  void add_f(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      f() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_f();

  // map<uint32, uint32> h = 8;
  int h_size() const;
  void clear_h();
  static const int kHFieldNumber = 8;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
      h() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
      mutable_h();

  // string b = 2;
  void clear_b();
  static const int kBFieldNumber = 2;
  const ::std::string& b() const;
  void set_b(const ::std::string& value);
  #if LANG_CXX11
  void set_b(::std::string&& value);
  #endif
  void set_b(const char* value);
  void set_b(const char* value, size_t size);
  ::std::string* mutable_b();
  ::std::string* release_b();
  void set_allocated_b(::std::string* b);

  // .subtest g = 7;
  bool has_g() const;
  void clear_g();
  static const int kGFieldNumber = 7;
  const ::subtest& g() const;
  ::subtest* mutable_g();
  ::subtest* release_g();
  void set_allocated_g(::subtest* g);

  // int32 a = 1;
  void clear_a();
  static const int kAFieldNumber = 1;
  ::google::protobuf::int32 a() const;
  void set_a(::google::protobuf::int32 value);

  // uint32 c = 3;
  void clear_c();
  static const int kCFieldNumber = 3;
  ::google::protobuf::uint32 c() const;
  void set_c(::google::protobuf::uint32 value);

  // uint64 d = 4;
  void clear_d();
  static const int kDFieldNumber = 4;
  ::google::protobuf::uint64 d() const;
  void set_d(::google::protobuf::uint64 value);

  // double e = 5;
  void clear_e();
  static const int kEFieldNumber = 5;
  double e() const;
  void set_e(double value);

  // uint64 i = 9;
  void clear_i();
  static const int kIFieldNumber = 9;
  ::google::protobuf::uint64 i() const;
  void set_i(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:test)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > f_;
  mutable int _f_cached_byte_size_;
  public:
  class test_HEntry : public ::google::protobuf::internal::MapEntry<test_HEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<test_HEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > SuperType;
    test_HEntry();
    test_HEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const test_HEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_test_HEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      test_HEntry,
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > h_;
  private:
  ::google::protobuf::internal::ArenaStringPtr b_;
  ::subtest* g_;
  ::google::protobuf::int32 a_;
  ::google::protobuf::uint32 c_;
  ::google::protobuf::uint64 d_;
  double e_;
  ::google::protobuf::uint64 i_;
  mutable int _cached_size_;
  friend struct protobuf_test_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class wocaozhenniubi : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:wocaozhenniubi) */ {
 public:
  wocaozhenniubi();
  virtual ~wocaozhenniubi();

  wocaozhenniubi(const wocaozhenniubi& from);

  inline wocaozhenniubi& operator=(const wocaozhenniubi& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  wocaozhenniubi(wocaozhenniubi&& from) noexcept
    : wocaozhenniubi() {
    *this = ::std::move(from);
  }

  inline wocaozhenniubi& operator=(wocaozhenniubi&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const wocaozhenniubi& default_instance();

  static inline const wocaozhenniubi* internal_default_instance() {
    return reinterpret_cast<const wocaozhenniubi*>(
               &_wocaozhenniubi_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(wocaozhenniubi* other);
  friend void swap(wocaozhenniubi& a, wocaozhenniubi& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline wocaozhenniubi* New() const PROTOBUF_FINAL { return New(NULL); }

  wocaozhenniubi* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const wocaozhenniubi& from);
  void MergeFrom(const wocaozhenniubi& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(wocaozhenniubi* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string s = 1;
  void clear_s();
  static const int kSFieldNumber = 1;
  const ::std::string& s() const;
  void set_s(const ::std::string& value);
  #if LANG_CXX11
  void set_s(::std::string&& value);
  #endif
  void set_s(const char* value);
  void set_s(const char* value, size_t size);
  ::std::string* mutable_s();
  ::std::string* release_s();
  void set_allocated_s(::std::string* s);

  // @@protoc_insertion_point(class_scope:wocaozhenniubi)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr s_;
  mutable int _cached_size_;
  friend struct protobuf_test_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// subtest

// int32 sa = 1;
inline void subtest::clear_sa() {
  sa_ = 0;
}
inline ::google::protobuf::int32 subtest::sa() const {
  // @@protoc_insertion_point(field_get:subtest.sa)
  return sa_;
}
inline void subtest::set_sa(::google::protobuf::int32 value) {
  
  sa_ = value;
  // @@protoc_insertion_point(field_set:subtest.sa)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// test

// int32 a = 1;
inline void test::clear_a() {
  a_ = 0;
}
inline ::google::protobuf::int32 test::a() const {
  // @@protoc_insertion_point(field_get:test.a)
  return a_;
}
inline void test::set_a(::google::protobuf::int32 value) {
  
  a_ = value;
  // @@protoc_insertion_point(field_set:test.a)
}

// string b = 2;
inline void test::clear_b() {
  b_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& test::b() const {
  // @@protoc_insertion_point(field_get:test.b)
  return b_.GetNoArena();
}
inline void test::set_b(const ::std::string& value) {
  
  b_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:test.b)
}
#if LANG_CXX11
inline void test::set_b(::std::string&& value) {
  
  b_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:test.b)
}
#endif
inline void test::set_b(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  b_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:test.b)
}
inline void test::set_b(const char* value, size_t size) {
  
  b_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:test.b)
}
inline ::std::string* test::mutable_b() {
  
  // @@protoc_insertion_point(field_mutable:test.b)
  return b_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* test::release_b() {
  // @@protoc_insertion_point(field_release:test.b)
  
  return b_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void test::set_allocated_b(::std::string* b) {
  if (b != NULL) {
    
  } else {
    
  }
  b_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), b);
  // @@protoc_insertion_point(field_set_allocated:test.b)
}

// uint32 c = 3;
inline void test::clear_c() {
  c_ = 0u;
}
inline ::google::protobuf::uint32 test::c() const {
  // @@protoc_insertion_point(field_get:test.c)
  return c_;
}
inline void test::set_c(::google::protobuf::uint32 value) {
  
  c_ = value;
  // @@protoc_insertion_point(field_set:test.c)
}

// uint64 d = 4;
inline void test::clear_d() {
  d_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 test::d() const {
  // @@protoc_insertion_point(field_get:test.d)
  return d_;
}
inline void test::set_d(::google::protobuf::uint64 value) {
  
  d_ = value;
  // @@protoc_insertion_point(field_set:test.d)
}

// double e = 5;
inline void test::clear_e() {
  e_ = 0;
}
inline double test::e() const {
  // @@protoc_insertion_point(field_get:test.e)
  return e_;
}
inline void test::set_e(double value) {
  
  e_ = value;
  // @@protoc_insertion_point(field_set:test.e)
}

// repeated uint32 f = 6;
inline int test::f_size() const {
  return f_.size();
}
inline void test::clear_f() {
  f_.Clear();
}
inline ::google::protobuf::uint32 test::f(int index) const {
  // @@protoc_insertion_point(field_get:test.f)
  return f_.Get(index);
}
inline void test::set_f(int index, ::google::protobuf::uint32 value) {
  f_.Set(index, value);
  // @@protoc_insertion_point(field_set:test.f)
}
inline void test::add_f(::google::protobuf::uint32 value) {
  f_.Add(value);
  // @@protoc_insertion_point(field_add:test.f)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
test::f() const {
  // @@protoc_insertion_point(field_list:test.f)
  return f_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
test::mutable_f() {
  // @@protoc_insertion_point(field_mutable_list:test.f)
  return &f_;
}

// .subtest g = 7;
inline bool test::has_g() const {
  return this != internal_default_instance() && g_ != NULL;
}
inline void test::clear_g() {
  if (GetArenaNoVirtual() == NULL && g_ != NULL) delete g_;
  g_ = NULL;
}
inline const ::subtest& test::g() const {
  const ::subtest* p = g_;
  // @@protoc_insertion_point(field_get:test.g)
  return p != NULL ? *p : *reinterpret_cast<const ::subtest*>(
      &::_subtest_default_instance_);
}
inline ::subtest* test::mutable_g() {
  
  if (g_ == NULL) {
    g_ = new ::subtest;
  }
  // @@protoc_insertion_point(field_mutable:test.g)
  return g_;
}
inline ::subtest* test::release_g() {
  // @@protoc_insertion_point(field_release:test.g)
  
  ::subtest* temp = g_;
  g_ = NULL;
  return temp;
}
inline void test::set_allocated_g(::subtest* g) {
  delete g_;
  g_ = g;
  if (g) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:test.g)
}

// map<uint32, uint32> h = 8;
inline int test::h_size() const {
  return h_.size();
}
inline void test::clear_h() {
  h_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
test::h() const {
  // @@protoc_insertion_point(field_map:test.h)
  return h_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
test::mutable_h() {
  // @@protoc_insertion_point(field_mutable_map:test.h)
  return h_.MutableMap();
}

// uint64 i = 9;
inline void test::clear_i() {
  i_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 test::i() const {
  // @@protoc_insertion_point(field_get:test.i)
  return i_;
}
inline void test::set_i(::google::protobuf::uint64 value) {
  
  i_ = value;
  // @@protoc_insertion_point(field_set:test.i)
}

// -------------------------------------------------------------------

// wocaozhenniubi

// string s = 1;
inline void wocaozhenniubi::clear_s() {
  s_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& wocaozhenniubi::s() const {
  // @@protoc_insertion_point(field_get:wocaozhenniubi.s)
  return s_.GetNoArena();
}
inline void wocaozhenniubi::set_s(const ::std::string& value) {
  
  s_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:wocaozhenniubi.s)
}
#if LANG_CXX11
inline void wocaozhenniubi::set_s(::std::string&& value) {
  
  s_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:wocaozhenniubi.s)
}
#endif
inline void wocaozhenniubi::set_s(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  s_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:wocaozhenniubi.s)
}
inline void wocaozhenniubi::set_s(const char* value, size_t size) {
  
  s_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:wocaozhenniubi.s)
}
inline ::std::string* wocaozhenniubi::mutable_s() {
  
  // @@protoc_insertion_point(field_mutable:wocaozhenniubi.s)
  return s_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* wocaozhenniubi::release_s() {
  // @@protoc_insertion_point(field_release:wocaozhenniubi.s)
  
  return s_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void wocaozhenniubi::set_allocated_s(::std::string* s) {
  if (s != NULL) {
    
  } else {
    
  }
  s_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), s);
  // @@protoc_insertion_point(field_set_allocated:wocaozhenniubi.s)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_test_2eproto__INCLUDED
